{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "currentAllowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requestedDecrease",
          "type": "uint256"
        }
      ],
      "name": "ERC20FailedDecreaseAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "AddressBanned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "AddressUnbanned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "banAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bannedAdresses",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "requestedDecrease",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "unBannedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200129f3803806200129f8339810160408190526200003491620002e7565b82826003620000448382620003e9565b506004620000538282620003e9565b5050506200008d336200006b620000a860201b60201c565b6200007b9060ff16600a620005ca565b620000879084620005df565b620000ad565b5050600580546001600160a01b03191633179055506200060f565b601290565b6001600160a01b038216620000dd5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620000eb60008383620000ef565b5050565b6001600160a01b0383166200011e578060026000828254620001129190620005f9565b90915550620001929050565b6001600160a01b03831660009081526020819052604090205481811015620001735760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000d4565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620001b057600280548290039055620001cf565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200021591815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200024a57600080fd5b81516001600160401b038082111562000267576200026762000222565b604051601f8301601f19908116603f0116810190828211818310171562000292576200029262000222565b81604052838152602092508683858801011115620002af57600080fd5b600091505b83821015620002d35785820183015181830184015290820190620002b4565b600093810190920192909252949350505050565b600080600060608486031215620002fd57600080fd5b83516001600160401b03808211156200031557600080fd5b620003238783880162000238565b945060208601519150808211156200033a57600080fd5b50620003498682870162000238565b925050604084015190509250925092565b600181811c908216806200036f57607f821691505b6020821081036200039057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003e457600081815260208120601f850160051c81016020861015620003bf5750805b601f850160051c820191505b81811015620003e057828155600101620003cb565b5050505b505050565b81516001600160401b0381111562000405576200040562000222565b6200041d816200041684546200035a565b8462000396565b602080601f8311600181146200045557600084156200043c5750858301515b600019600386901b1c1916600185901b178555620003e0565b600085815260208120601f198616915b82811015620004865788860151825594840194600190910190840162000465565b5085821015620004a55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200050c578160001904821115620004f057620004f0620004b5565b80851615620004fe57918102915b93841c9390800290620004d0565b509250929050565b6000826200052557506001620005c4565b816200053457506000620005c4565b81600181146200054d5760028114620005585762000578565b6001915050620005c4565b60ff8411156200056c576200056c620004b5565b50506001821b620005c4565b5060208310610133831016604e8410600b84101617156200059d575081810a620005c4565b620005a98383620004cb565b8060001904821115620005c057620005c0620004b5565b0290505b92915050565b6000620005d8838362000514565b9392505050565b8082028115828204841417620005c457620005c4620004b5565b80820180821115620005c457620005c4620004b5565b610c80806200061f6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637f49f70911610097578063a457c2d711610066578063a457c2d71461021c578063a9059cbb1461022f578063dd62ed3e14610242578063f851a4401461025557600080fd5b80637f49f709146101d95780638f283970146101ee57806395d89b4114610201578063a13ef0f21461020957600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a5780635734edb71461018d57806370a08231146101b057600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610280565b60405161011a9190610a8f565b60405180910390f35b610136610131366004610af9565b610312565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610b23565b61032c565b6040516012815260200161011a565b610136610188366004610af9565b6103ff565b61013661019b366004610b5f565b60066020526000908152604090205460ff1681565b61014a6101be366004610b5f565b6001600160a01b031660009081526020819052604090205490565b6101ec6101e7366004610b5f565b610421565b005b6101ec6101fc366004610b5f565b610505565b61010d61055a565b6101ec610217366004610b5f565b610569565b61013661022a366004610af9565b61064c565b61013661023d366004610af9565b6106ae565b61014a610250366004610b7a565b610771565b600554610268906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b60606003805461028f90610bad565b80601f01602080910402602001604051908101604052809291908181526020018280546102bb90610bad565b80156103085780601f106102dd57610100808354040283529160200191610308565b820191906000526020600020905b8154815290600101906020018083116102eb57829003601f168201915b5050505050905090565b60003361032081858561079c565b60019150505b92915050565b6001600160a01b03831660009081526006602052604081205460ff161561038d5760405162461bcd60e51b815260206004820152601060248201526f14d95b99195c881a5cc818985b9b995960821b60448201526064015b60405180910390fd5b6001600160a01b03831660009081526006602052604090205460ff16156103ec5760405162461bcd60e51b8152602060048201526013602482015272149958da5c1a595b9d081a5cc818985b9b9959606a1b6044820152606401610384565b6103f78484846107ae565b949350505050565b6000336103208185856104128383610771565b61041c9190610be7565b61079c565b6005546001600160a01b0316336001600160a01b0316146104545760405162461bcd60e51b815260040161038490610c08565b6001600160a01b03811660009081526006602052604090205460ff16156104b95760405162461bcd60e51b81526020600482015260196024820152781059191c995cdcc81a5cc8185b1c9958591e4818985b9b9959603a1b6044820152606401610384565b6001600160a01b038116600081815260066020526040808220805460ff19166001179055517f4e1f1083e536396ee005a5640fc3beb4d082ac0ec24882c6b8b35121beb61c5c9190a250565b6005546001600160a01b0316336001600160a01b0316146105385760405162461bcd60e51b815260040161038490610c08565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b60606004805461028f90610bad565b6005546001600160a01b0316336001600160a01b03161461059c5760405162461bcd60e51b815260040161038490610c08565b6001600160a01b03811660009081526006602052604090205460ff166106005760405162461bcd60e51b81526020600482015260196024820152781059191c995cdcc81a5cc8185b1c9958591e4818985b9b9959603a1b6044820152606401610384565b6001600160a01b038116600081815260066020526040808220805460ff19166001179055517faf21b055f404aae56187594ef6bc522fbab24d4a05adc05c41c16a844b73b0249190a250565b6000338161065a8286610771565b90508381101561069657604051632983c0c360e21b81526001600160a01b03861660048201526024810182905260448101859052606401610384565b6106a3828686840361079c565b506001949350505050565b3360009081526006602052604081205460ff16156107015760405162461bcd60e51b815260206004820152601060248201526f14d95b99195c881a5cc818985b9b995960821b6044820152606401610384565b6001600160a01b03831660009081526006602052604090205460ff16156107605760405162461bcd60e51b8152602060048201526013602482015272149958da5c1a595b9d081a5cc818985b9b9959606a1b6044820152606401610384565b61076a83836107c7565b9392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6107a983838360016107d5565b505050565b6000336107bc8582856108ab565b6106a385858561090b565b60003361032081858561090b565b6001600160a01b0384166107ff5760405163e602df0560e01b815260006004820152602401610384565b6001600160a01b03831661082957604051634a1406b160e11b815260006004820152602401610384565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156108a557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161089c91815260200190565b60405180910390a35b50505050565b60006108b78484610771565b905060001981146108a557818110156108fc57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610384565b6108a5848484840360006107d5565b6001600160a01b03831661093557604051634b637e8f60e11b815260006004820152602401610384565b6001600160a01b03821661095f5760405163ec442f0560e01b815260006004820152602401610384565b6107a98383836001600160a01b0383166109905780600260008282546109859190610be7565b90915550610a029050565b6001600160a01b038316600090815260208190526040902054818110156109e35760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610384565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610a1e57600280548290039055610a3d565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a8291815260200190565b60405180910390a3505050565b600060208083528351808285015260005b81811015610abc57858101830151858201604001528201610aa0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610af457600080fd5b919050565b60008060408385031215610b0c57600080fd5b610b1583610add565b946020939093013593505050565b600080600060608486031215610b3857600080fd5b610b4184610add565b9250610b4f60208501610add565b9150604084013590509250925092565b600060208284031215610b7157600080fd5b61076a82610add565b60008060408385031215610b8d57600080fd5b610b9683610add565b9150610ba460208401610add565b90509250929050565b600181811c90821680610bc157607f821691505b602082108103610be157634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561032657634e487b7160e01b600052601160045260246000fd5b60208082526022908201527f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960408201526137b760f11b60608201526080019056fea2646970667358221220e5e60f01f0375a8c39029786540cc52c6b152fac2c8708cc18278ece6fd1219e64736f6c63430008150033",
    "sourceMap": "282:2178:6:-:0;;;917:248;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1041:5;1047:7;2399:5:2;:13;1041:5:6;2399::2;:13;:::i;:::-;-1:-1:-1;2423:7:2;:17;2433:7;2423;:17;:::i;:::-;;2332:116;;1067:61:6::1;1073:10;1116;:8;;;:10;;:::i;:::-;1102:25;::::0;1108:19:::1;;1102:2;:25;:::i;:::-;1085:42;::::0;:14;:42:::1;:::i;:::-;1067:5;:61::i;:::-;-1:-1:-1::0;;1139:5:6::1;:18:::0;;-1:-1:-1;;;;;;1139:18:6::1;1147:10;1139:18;::::0;;-1:-1:-1;282:2178:6;;3471:84:2;3545:2;;3471:84::o;10164:213::-;-1:-1:-1;;;;;10235:21:2;;10231:93;;10280:32;;-1:-1:-1;;;10280:32:2;;10309:1;10280:32;;;6033:51:8;6006:18;;10280:32:2;;;;;;;;10231:93;10334:35;10350:1;10354:7;10363:5;10334:7;:35::i;:::-;10164:213;;:::o;8676:1135::-;-1:-1:-1;;;;;8766:18:2;;8762:552;;8920:5;8904:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;8762:552:2;;-1:-1:-1;8762:552:2;;-1:-1:-1;;;;;8980:15:2;;8958:19;8980:15;;;;;;;;;;;9014:19;;;9010:117;;;9061:50;;-1:-1:-1;;;9061:50:2;;-1:-1:-1;;;;;6445:32:8;;9061:50:2;;;6427:51:8;6494:18;;;6487:34;;;6537:18;;;6530:34;;;6400:18;;9061:50:2;6225:345:8;9010:117:2;-1:-1:-1;;;;;9250:15:2;;:9;:15;;;;;;;;;;9268:19;;;;9250:37;;8762:552;-1:-1:-1;;;;;9330:16:2;;9326:435;;9496:12;:21;;;;;;;9326:435;;;-1:-1:-1;;;;;9712:13:2;;:9;:13;;;;;;;;;;:22;;;;;;9326:435;9793:2;-1:-1:-1;;;;;9778:25:2;9787:4;-1:-1:-1;;;;;9778:25:2;;9797:5;9778:25;;;;6721::8;;6709:2;6694:18;;6575:177;9778:25:2;;;;;;;;8676:1135;;;:::o;14:127:8:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:8;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:8;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:8:o;991:623::-;1099:6;1107;1115;1168:2;1156:9;1147:7;1143:23;1139:32;1136:52;;;1184:1;1181;1174:12;1136:52;1211:16;;-1:-1:-1;;;;;1276:14:8;;;1273:34;;;1303:1;1300;1293:12;1273:34;1326:61;1379:7;1370:6;1359:9;1355:22;1326:61;:::i;:::-;1316:71;;1433:2;1422:9;1418:18;1412:25;1396:41;;1462:2;1452:8;1449:16;1446:36;;;1478:1;1475;1468:12;1446:36;;1501:63;1556:7;1545:8;1534:9;1530:24;1501:63;:::i;:::-;1491:73;;;1604:2;1593:9;1589:18;1583:25;1573:35;;991:623;;;;;:::o;1619:380::-;1698:1;1694:12;;;;1741;;;1762:61;;1816:4;1808:6;1804:17;1794:27;;1762:61;1869:2;1861:6;1858:14;1838:18;1835:38;1832:161;;1915:10;1910:3;1906:20;1903:1;1896:31;1950:4;1947:1;1940:15;1978:4;1975:1;1968:15;1832:161;;1619:380;;;:::o;2130:545::-;2232:2;2227:3;2224:11;2221:448;;;2268:1;2293:5;2289:2;2282:17;2338:4;2334:2;2324:19;2408:2;2396:10;2392:19;2389:1;2385:27;2379:4;2375:38;2444:4;2432:10;2429:20;2426:47;;;-1:-1:-1;2467:4:8;2426:47;2522:2;2517:3;2513:12;2510:1;2506:20;2500:4;2496:31;2486:41;;2577:82;2595:2;2588:5;2585:13;2577:82;;;2640:17;;;2621:1;2610:13;2577:82;;;2581:3;;;2221:448;2130:545;;;:::o;2851:1352::-;2971:10;;-1:-1:-1;;;;;2993:30:8;;2990:56;;;3026:18;;:::i;:::-;3055:97;3145:6;3105:38;3137:4;3131:11;3105:38;:::i;:::-;3099:4;3055:97;:::i;:::-;3207:4;;3271:2;3260:14;;3288:1;3283:663;;;;3990:1;4007:6;4004:89;;;-1:-1:-1;4059:19:8;;;4053:26;4004:89;-1:-1:-1;;2808:1:8;2804:11;;;2800:24;2796:29;2786:40;2832:1;2828:11;;;2783:57;4106:81;;3253:944;;3283:663;2077:1;2070:14;;;2114:4;2101:18;;-1:-1:-1;;3319:20:8;;;3437:236;3451:7;3448:1;3445:14;3437:236;;;3540:19;;;3534:26;3519:42;;3632:27;;;;3600:1;3588:14;;;;3467:19;;3437:236;;;3441:3;3701:6;3692:7;3689:19;3686:201;;;3762:19;;;3756:26;-1:-1:-1;;3845:1:8;3841:14;;;3857:3;3837:24;3833:37;3829:42;3814:58;3799:74;;3686:201;-1:-1:-1;;;;;3933:1:8;3917:14;;;3913:22;3900:36;;-1:-1:-1;2851:1352:8:o;4208:127::-;4269:10;4264:3;4260:20;4257:1;4250:31;4300:4;4297:1;4290:15;4324:4;4321:1;4314:15;4340:422;4429:1;4472:5;4429:1;4486:270;4507:7;4497:8;4494:21;4486:270;;;4566:4;4562:1;4558:6;4554:17;4548:4;4545:27;4542:53;;;4575:18;;:::i;:::-;4625:7;4615:8;4611:22;4608:55;;;4645:16;;;;4608:55;4724:22;;;;4684:15;;;;4486:270;;;4490:3;4340:422;;;;;:::o;4767:806::-;4816:5;4846:8;4836:80;;-1:-1:-1;4887:1:8;4901:5;;4836:80;4935:4;4925:76;;-1:-1:-1;4972:1:8;4986:5;;4925:76;5017:4;5035:1;5030:59;;;;5103:1;5098:130;;;;5010:218;;5030:59;5060:1;5051:10;;5074:5;;;5098:130;5135:3;5125:8;5122:17;5119:43;;;5142:18;;:::i;:::-;-1:-1:-1;;5198:1:8;5184:16;;5213:5;;5010:218;;5312:2;5302:8;5299:16;5293:3;5287:4;5284:13;5280:36;5274:2;5264:8;5261:16;5256:2;5250:4;5247:12;5243:35;5240:77;5237:159;;;-1:-1:-1;5349:19:8;;;5381:5;;5237:159;5428:34;5453:8;5447:4;5428:34;:::i;:::-;5498:6;5494:1;5490:6;5486:19;5477:7;5474:32;5471:58;;;5509:18;;:::i;:::-;5547:20;;-1:-1:-1;4767:806:8;;;;;:::o;5578:131::-;5638:5;5667:36;5694:8;5688:4;5667:36;:::i;:::-;5658:45;5578:131;-1:-1:-1;;;5578:131:8:o;5714:168::-;5787:9;;;5818;;5835:15;;;5829:22;;5815:37;5805:71;;5856:18;;:::i;6095:125::-;6160:9;;;6181:10;;;6178:36;;;6194:18;;:::i;6575:177::-;282:2178:6;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80637f49f70911610097578063a457c2d711610066578063a457c2d71461021c578063a9059cbb1461022f578063dd62ed3e14610242578063f851a4401461025557600080fd5b80637f49f709146101d95780638f283970146101ee57806395d89b4114610201578063a13ef0f21461020957600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a5780635734edb71461018d57806370a08231146101b057600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610280565b60405161011a9190610a8f565b60405180910390f35b610136610131366004610af9565b610312565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610b23565b61032c565b6040516012815260200161011a565b610136610188366004610af9565b6103ff565b61013661019b366004610b5f565b60066020526000908152604090205460ff1681565b61014a6101be366004610b5f565b6001600160a01b031660009081526020819052604090205490565b6101ec6101e7366004610b5f565b610421565b005b6101ec6101fc366004610b5f565b610505565b61010d61055a565b6101ec610217366004610b5f565b610569565b61013661022a366004610af9565b61064c565b61013661023d366004610af9565b6106ae565b61014a610250366004610b7a565b610771565b600554610268906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b60606003805461028f90610bad565b80601f01602080910402602001604051908101604052809291908181526020018280546102bb90610bad565b80156103085780601f106102dd57610100808354040283529160200191610308565b820191906000526020600020905b8154815290600101906020018083116102eb57829003601f168201915b5050505050905090565b60003361032081858561079c565b60019150505b92915050565b6001600160a01b03831660009081526006602052604081205460ff161561038d5760405162461bcd60e51b815260206004820152601060248201526f14d95b99195c881a5cc818985b9b995960821b60448201526064015b60405180910390fd5b6001600160a01b03831660009081526006602052604090205460ff16156103ec5760405162461bcd60e51b8152602060048201526013602482015272149958da5c1a595b9d081a5cc818985b9b9959606a1b6044820152606401610384565b6103f78484846107ae565b949350505050565b6000336103208185856104128383610771565b61041c9190610be7565b61079c565b6005546001600160a01b0316336001600160a01b0316146104545760405162461bcd60e51b815260040161038490610c08565b6001600160a01b03811660009081526006602052604090205460ff16156104b95760405162461bcd60e51b81526020600482015260196024820152781059191c995cdcc81a5cc8185b1c9958591e4818985b9b9959603a1b6044820152606401610384565b6001600160a01b038116600081815260066020526040808220805460ff19166001179055517f4e1f1083e536396ee005a5640fc3beb4d082ac0ec24882c6b8b35121beb61c5c9190a250565b6005546001600160a01b0316336001600160a01b0316146105385760405162461bcd60e51b815260040161038490610c08565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b60606004805461028f90610bad565b6005546001600160a01b0316336001600160a01b03161461059c5760405162461bcd60e51b815260040161038490610c08565b6001600160a01b03811660009081526006602052604090205460ff166106005760405162461bcd60e51b81526020600482015260196024820152781059191c995cdcc81a5cc8185b1c9958591e4818985b9b9959603a1b6044820152606401610384565b6001600160a01b038116600081815260066020526040808220805460ff19166001179055517faf21b055f404aae56187594ef6bc522fbab24d4a05adc05c41c16a844b73b0249190a250565b6000338161065a8286610771565b90508381101561069657604051632983c0c360e21b81526001600160a01b03861660048201526024810182905260448101859052606401610384565b6106a3828686840361079c565b506001949350505050565b3360009081526006602052604081205460ff16156107015760405162461bcd60e51b815260206004820152601060248201526f14d95b99195c881a5cc818985b9b995960821b6044820152606401610384565b6001600160a01b03831660009081526006602052604090205460ff16156107605760405162461bcd60e51b8152602060048201526013602482015272149958da5c1a595b9d081a5cc818985b9b9959606a1b6044820152606401610384565b61076a83836107c7565b9392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6107a983838360016107d5565b505050565b6000336107bc8582856108ab565b6106a385858561090b565b60003361032081858561090b565b6001600160a01b0384166107ff5760405163e602df0560e01b815260006004820152602401610384565b6001600160a01b03831661082957604051634a1406b160e11b815260006004820152602401610384565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156108a557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161089c91815260200190565b60405180910390a35b50505050565b60006108b78484610771565b905060001981146108a557818110156108fc57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610384565b6108a5848484840360006107d5565b6001600160a01b03831661093557604051634b637e8f60e11b815260006004820152602401610384565b6001600160a01b03821661095f5760405163ec442f0560e01b815260006004820152602401610384565b6107a98383836001600160a01b0383166109905780600260008282546109859190610be7565b90915550610a029050565b6001600160a01b038316600090815260208190526040902054818110156109e35760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610384565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610a1e57600280548290039055610a3d565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a8291815260200190565b60405180910390a3505050565b600060208083528351808285015260005b81811015610abc57858101830151858201604001528201610aa0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610af457600080fd5b919050565b60008060408385031215610b0c57600080fd5b610b1583610add565b946020939093013593505050565b600080600060608486031215610b3857600080fd5b610b4184610add565b9250610b4f60208501610add565b9150604084013590509250925092565b600060208284031215610b7157600080fd5b61076a82610add565b60008060408385031215610b8d57600080fd5b610b9683610add565b9150610ba460208401610add565b90509250929050565b600181811c90821680610bc157607f821691505b602082108103610be157634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561032657634e487b7160e01b600052601160045260246000fd5b60208082526022908201527f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960408201526137b760f11b60608201526080019056fea2646970667358221220e5e60f01f0375a8c39029786540cc52c6b152fac2c8708cc18278ece6fd1219e64736f6c63430008150033",
    "sourceMap": "282:2178:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:91:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4811:190;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:8;;1162:22;1144:41;;1132:2;1117:18;4811:190:2;1004:187:8;3620:99:2;3699:12;;3620:99;;;1342:25:8;;;1330:2;1315:18;3620:99:2;1196:177:8;2178:279:6;;;;;;:::i;:::-;;:::i;3471:84:2:-;;;3545:2;1853:36:8;;1841:2;1826:18;3471:84:2;1711:184:8;6237:238:2;;;;;;:::i;:::-;;:::i;353:46:6:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3782:118:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3874:18:2;3847:7;3874:18;;;;;;;;;;;;3782:118;1275:208:6;;;;;;:::i;:::-;;:::i;:::-;;1173:94;;;;;;:::i;:::-;;:::i;2728:95:2:-;;;:::i;1491:214:6:-;;;;;;:::i;:::-;;:::i;7163:504:2:-;;;;;;:::i;:::-;;:::i;1812:255:6:-;;;;;;:::i;:::-;;:::i;4350:142:2:-;;;;;;:::i;:::-;;:::i;326:20:6:-;;;;;-1:-1:-1;;;;;326:20:6;;;;;;-1:-1:-1;;;;;2520:32:8;;;2502:51;;2490:2;2475:18;326:20:6;2356:203:8;2518:91:2;2563:13;2596:5;2589:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:91;:::o;4811:190::-;4884:4;737:10:5;4940:31:2;737:10:5;4956:7:2;4965:5;4940:8;:31::i;:::-;4989:4;4982:11;;;4811:190;;;;;:::o;2178:279:6:-;-1:-1:-1;;;;;2292:20:6;;2266:4;2292:20;;;:14;:20;;;;;;;;2291:21;2283:50;;;;-1:-1:-1;;;2283:50:6;;3151:2:8;2283:50:6;;;3133:21:8;3190:2;3170:18;;;3163:30;-1:-1:-1;;;3209:18:8;;;3202:46;3265:18;;2283:50:6;;;;;;;;;-1:-1:-1;;;;;2353:18:6;;;;;;:14;:18;;;;;;;;2352:19;2344:51;;;;-1:-1:-1;;;2344:51:6;;3496:2:8;2344:51:6;;;3478:21:8;3535:2;3515:18;;;3508:30;-1:-1:-1;;;3554:18:8;;;3547:49;3613:18;;2344:51:6;3294:343:8;2344:51:6;2413:36;2432:4;2438:2;2443:5;2413:18;:36::i;:::-;2406:43;2178:279;-1:-1:-1;;;;2178:279:6:o;6237:238:2:-;6325:4;737:10:5;6381:64:2;737:10:5;6397:7:2;6434:10;6406:25;737:10:5;6397:7:2;6406:9;:25::i;:::-;:38;;;;:::i;:::-;6381:8;:64::i;1275:208:6:-;563:5;;-1:-1:-1;;;;;563:5:6;737:10:5;-1:-1:-1;;;;;547:21:6;;539:68;;;;-1:-1:-1;;;539:68:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;1349:21:6;::::1;;::::0;;;:14:::1;:21;::::0;;;;;::::1;;1348:22;1340:60;;;::::0;-1:-1:-1;;;1340:60:6;;4474:2:8;1340:60:6::1;::::0;::::1;4456:21:8::0;4513:2;4493:18;;;4486:30;-1:-1:-1;;;4532:18:8;;;4525:55;4597:18;;1340:60:6::1;4272:349:8::0;1340:60:6::1;-1:-1:-1::0;;;;;1411:21:6;::::1;;::::0;;;:14:::1;:21;::::0;;;;;:28;;-1:-1:-1;;1411:28:6::1;1435:4;1411:28;::::0;;1455:20;::::1;::::0;1411:21;1455:20:::1;1275:208:::0;:::o;1173:94::-;563:5;;-1:-1:-1;;;;;563:5:6;737:10:5;-1:-1:-1;;;;;547:21:6;;539:68;;;;-1:-1:-1;;;539:68:6;;;;;;;:::i;:::-;1242:5:::1;:17:::0;;-1:-1:-1;;;;;;1242:17:6::1;-1:-1:-1::0;;;;;1242:17:6;;;::::1;::::0;;;::::1;::::0;;1173:94::o;2728:95:2:-;2775:13;2808:7;2801:14;;;;;:::i;1491:214:6:-;563:5;;-1:-1:-1;;;;;563:5:6;737:10:5;-1:-1:-1;;;;;547:21:6;;539:68;;;;-1:-1:-1;;;539:68:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;1569:21:6;::::1;;::::0;;;:14:::1;:21;::::0;;;;;::::1;;1561:59;;;::::0;-1:-1:-1;;;1561:59:6;;4474:2:8;1561:59:6::1;::::0;::::1;4456:21:8::0;4513:2;4493:18;;;4486:30;-1:-1:-1;;;4532:18:8;;;4525:55;4597:18;;1561:59:6::1;4272:349:8::0;1561:59:6::1;-1:-1:-1::0;;;;;1631:21:6;::::1;;::::0;;;:14:::1;:21;::::0;;;;;:28;;-1:-1:-1;;1631:28:6::1;1655:4;1631:28;::::0;;1675:22;::::1;::::0;1631:21;1675:22:::1;1491:214:::0;:::o;7163:504:2:-;7258:4;737:10:5;7258:4:2;7341:25;737:10:5;7358:7:2;7341:9;:25::i;:::-;7314:52;;7400:17;7381:16;:36;7377:150;;;7441:74;;-1:-1:-1;;;7441:74:2;;-1:-1:-1;;;;;4846:32:8;;7441:74:2;;;4828:51:8;4895:18;;;4888:34;;;4938:18;;;4931:34;;;4801:18;;7441:74:2;4626:345:8;7377:150:2;7562:62;7571:5;7578:7;7606:17;7587:16;:36;7562:8;:62::i;:::-;-1:-1:-1;7655:4:2;;7163:504;-1:-1:-1;;;;7163:504:2:o;1812:255:6:-;1923:10;1882:4;1908:26;;;:14;:26;;;;;;;;1907:27;1899:56;;;;-1:-1:-1;;;1899:56:6;;3151:2:8;1899:56:6;;;3133:21:8;3190:2;3170:18;;;3163:30;-1:-1:-1;;;3209:18:8;;;3202:46;3265:18;;1899:56:6;2949:340:8;1899:56:6;-1:-1:-1;;;;;1975:18:6;;;;;;:14;:18;;;;;;;;1974:19;1966:51;;;;-1:-1:-1;;;1966:51:6;;3496:2:8;1966:51:6;;;3478:21:8;3535:2;3515:18;;;3508:30;-1:-1:-1;;;3554:18:8;;;3547:49;3613:18;;1966:51:6;3294:343:8;1966:51:6;2035:24;2050:2;2053:5;2035:14;:24::i;:::-;2028:31;1812:255;-1:-1:-1;;;1812:255:6:o;4350:142:2:-;-1:-1:-1;;;;;4457:18:2;;;4430:7;4457:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4350:142::o;11476:130::-;11561:37;11570:5;11577:7;11586:5;11593:4;11561:8;:37::i;:::-;11476:130;;;:::o;5579:249::-;5666:4;737:10:5;5724:37:2;5740:4;737:10:5;5755:5:2;5724:15;:37::i;:::-;5772:26;5782:4;5788:2;5792:5;5772:9;:26::i;4105:182::-;4174:4;737:10:5;4230:27:2;737:10:5;4247:2:2;4251:5;4230:9;:27::i;12457:443::-;-1:-1:-1;;;;;12570:19:2;;12566:91;;12613:32;;-1:-1:-1;;;12613:32:2;;12642:1;12613:32;;;2502:51:8;2475:18;;12613:32:2;2356:203:8;12566:91:2;-1:-1:-1;;;;;12671:21:2;;12667:92;;12716:31;;-1:-1:-1;;;12716:31:2;;12744:1;12716:31;;;2502:51:8;2475:18;;12716:31:2;2356:203:8;12667:92:2;-1:-1:-1;;;;;12769:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;12815:78;;;;12866:7;-1:-1:-1;;;;;12850:31:2;12859:5;-1:-1:-1;;;;;12850:31:2;;12875:5;12850:31;;;;1342:25:8;;1330:2;1315:18;;1196:177;12850:31:2;;;;;;;;12815:78;12457:443;;;;:::o;13189:487::-;13289:24;13316:25;13326:5;13333:7;13316:9;:25::i;:::-;13289:52;;-1:-1:-1;;13356:16:2;:37;13352:317;;13433:5;13414:16;:24;13410:132;;;13466:60;;-1:-1:-1;;;13466:60:2;;-1:-1:-1;;;;;4846:32:8;;13466:60:2;;;4828:51:8;4895:18;;;4888:34;;;4938:18;;;4931:34;;;4801:18;;13466:60:2;4626:345:8;13410:132:2;13585:57;13594:5;13601:7;13629:5;13610:16;:24;13636:5;13585:8;:57::i;8052:308::-;-1:-1:-1;;;;;8136:18:2;;8132:88;;8178:30;;-1:-1:-1;;;8178:30:2;;8205:1;8178:30;;;2502:51:8;2475:18;;8178:30:2;2356:203:8;8132:88:2;-1:-1:-1;;;;;8234:16:2;;8230:88;;8274:32;;-1:-1:-1;;;8274:32:2;;8303:1;8274:32;;;2502:51:8;2475:18;;8274:32:2;2356:203:8;8230:88:2;8328:24;8336:4;8342:2;8346:5;-1:-1:-1;;;;;8766:18:2;;8762:552;;8920:5;8904:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;8762:552:2;;-1:-1:-1;8762:552:2;;-1:-1:-1;;;;;8980:15:2;;8958:19;8980:15;;;;;;;;;;;9014:19;;;9010:117;;;9061:50;;-1:-1:-1;;;9061:50:2;;-1:-1:-1;;;;;4846:32:8;;9061:50:2;;;4828:51:8;4895:18;;;4888:34;;;4938:18;;;4931:34;;;4801:18;;9061:50:2;4626:345:8;9010:117:2;-1:-1:-1;;;;;9250:15:2;;:9;:15;;;;;;;;;;9268:19;;;;9250:37;;8762:552;-1:-1:-1;;;;;9330:16:2;;9326:435;;9496:12;:21;;;;;;;9326:435;;;-1:-1:-1;;;;;9712:13:2;;:9;:13;;;;;;;;;;:22;;;;;;9326:435;9793:2;-1:-1:-1;;;;;9778:25:2;9787:4;-1:-1:-1;;;;;9778:25:2;;9797:5;9778:25;;;;1342::8;;1330:2;1315:18;;1196:177;9778:25:2;;;;;;;;8676:1135;;;:::o;14:548:8:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:8;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:8:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2564:380::-;2643:1;2639:12;;;;2686;;;2707:61;;2761:4;2753:6;2749:17;2739:27;;2707:61;2814:2;2806:6;2803:14;2783:18;2780:38;2777:161;;2860:10;2855:3;2851:20;2848:1;2841:31;2895:4;2892:1;2885:15;2923:4;2920:1;2913:15;2777:161;;2564:380;;;:::o;3642:222::-;3707:9;;;3728:10;;;3725:133;;;3780:10;3775:3;3771:20;3768:1;3761:31;3815:4;3812:1;3805:15;3843:4;3840:1;3833:15;3869:398;4071:2;4053:21;;;4110:2;4090:18;;;4083:30;4149:34;4144:2;4129:18;;4122:62;-1:-1:-1;;;4215:2:8;4200:18;;4193:32;4257:3;4242:19;;3869:398::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "admin()": "f851a440",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "banAddress(address)": "7f49f709",
    "bannedAdresses(address)": "5734edb7",
    "changeAdmin(address)": "8f283970",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "unBannedAddress(address)": "a13ef0f2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"ERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"AddressBanned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"AddressUnbanned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"banAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bannedAdresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"unBannedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A custom ERC20 token contract that allows an admin to ban specified addresses from sending and receiving tokens.\",\"errors\":{\"ERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor to initialize the token with a name, symbol and initialSupply.\",\"params\":{\"_initialSupply\":\"The initial supply of tokens to mint to the contract deployer.\",\"_name\":\"The name of token.\",\"_symbol\":\"The symbol of token.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"}},\"title\":\"PowerfulAdminToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"transfer(address,uint256)\":{\"notice\":\"Override the transfer function to check for sanctions before allowing a transfer.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Override the transferFrom function to check for sanctions before allowing a transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PowerfulAdminToken.sol\":\"PowerfulAdminToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xf1fcb638e66b88ece2e8b42045801c4177dbe495d2dc0b9eebac015d5df53bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167737d63e0479e713b9471bcf7aaa8cad40e346a9151a4e507c2f34a80752b0\",\"dweb:/ipfs/QmVyfaL1snQhGbZkH5UFdG2beQYWz84T7eGSofgMkBjrzU\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x164109860c865362e434257fe105fb20d784f24c178366fce0c6d1466abd009b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8bffbb3f7b9bdbcf521d25cc47ca56df1d0d563c957d8cb9088ddb9829d37d8\",\"dweb:/ipfs/QmXLiY5EzQ9i8Ex8jzegzVz9h3UhYHRuQkB77kcxkvxU7e\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xb01442d8644513342deb582807f9092a75ce08487ea2d6161ef8f5f2f285b526\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91d13345b1e7125f6b0deb39fa067b1a8e80bcb84548d525d47d5b36664a6887\",\"dweb:/ipfs/QmRqAdtJyCQBjHfb339xWQXij6yjjz7XKu9b8G8irsXzWc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x1bdf69292ffadfe4fcba7e10e5550f438f7f1fde63310f5bb83edd9d3b0f69e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae1d053279ec2865200a6333b97426f4f781f0fca56dcb7d660c3eb99ae0b789\",\"dweb:/ipfs/QmTUBwywBhaqzAuXVjWm69UwwRsu1rfTh5GocqBZJ1bDCu\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xb166bb70c315866c3a99b74ed976249a84c780aaa5f2d3704b0f20120f975d1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd2dde01cb77478522a38d01ced8a51db5ede42eb539f595ffaab92c887a92dd\",\"dweb:/ipfs/QmWiyoP3mgTbcmovmiA2U3aNDm1dr1hh1i57c4PhpmSqiX\"]},\"src/PowerfulAdminToken.sol\":{\"keccak256\":\"0x26479c80dfad7e0d088b6b784fd622f8fbd4166fabb6f8bd03a4496c54156d3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9adf283b8938254e3da72ae8068fac67dfc7892d50ddb9de252b9e402888c5c8\",\"dweb:/ipfs/QmQRQFakvGXqwqCFMbgznihSNnUFfQ1hADvAU3Y3RYX4bX\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_initialSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "currentAllowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requestedDecrease",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20FailedDecreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddressBanned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddressUnbanned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "banAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "bannedAdresses",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeAdmin"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requestedDecrease",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unBannedAddress"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "constructor": {
            "details": "Constructor to initialize the token with a name, symbol and initialSupply.",
            "params": {
              "_initialSupply": "The initial supply of tokens to mint to the contract deployer.",
              "_name": "The name of token.",
              "_symbol": "The symbol of token."
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "transfer(address,uint256)": {
            "notice": "Override the transfer function to check for sanctions before allowing a transfer."
          },
          "transferFrom(address,address,uint256)": {
            "notice": "Override the transferFrom function to check for sanctions before allowing a transfer."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/PowerfulAdminToken.sol": "PowerfulAdminToken"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0xf1fcb638e66b88ece2e8b42045801c4177dbe495d2dc0b9eebac015d5df53bf1",
        "urls": [
          "bzz-raw://167737d63e0479e713b9471bcf7aaa8cad40e346a9151a4e507c2f34a80752b0",
          "dweb:/ipfs/QmVyfaL1snQhGbZkH5UFdG2beQYWz84T7eGSofgMkBjrzU"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x164109860c865362e434257fe105fb20d784f24c178366fce0c6d1466abd009b",
        "urls": [
          "bzz-raw://a8bffbb3f7b9bdbcf521d25cc47ca56df1d0d563c957d8cb9088ddb9829d37d8",
          "dweb:/ipfs/QmXLiY5EzQ9i8Ex8jzegzVz9h3UhYHRuQkB77kcxkvxU7e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xb01442d8644513342deb582807f9092a75ce08487ea2d6161ef8f5f2f285b526",
        "urls": [
          "bzz-raw://91d13345b1e7125f6b0deb39fa067b1a8e80bcb84548d525d47d5b36664a6887",
          "dweb:/ipfs/QmRqAdtJyCQBjHfb339xWQXij6yjjz7XKu9b8G8irsXzWc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x1bdf69292ffadfe4fcba7e10e5550f438f7f1fde63310f5bb83edd9d3b0f69e6",
        "urls": [
          "bzz-raw://ae1d053279ec2865200a6333b97426f4f781f0fca56dcb7d660c3eb99ae0b789",
          "dweb:/ipfs/QmTUBwywBhaqzAuXVjWm69UwwRsu1rfTh5GocqBZJ1bDCu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xb166bb70c315866c3a99b74ed976249a84c780aaa5f2d3704b0f20120f975d1d",
        "urls": [
          "bzz-raw://cd2dde01cb77478522a38d01ced8a51db5ede42eb539f595ffaab92c887a92dd",
          "dweb:/ipfs/QmWiyoP3mgTbcmovmiA2U3aNDm1dr1hh1i57c4PhpmSqiX"
        ],
        "license": "MIT"
      },
      "src/PowerfulAdminToken.sol": {
        "keccak256": "0x26479c80dfad7e0d088b6b784fd622f8fbd4166fabb6f8bd03a4496c54156d3c",
        "urls": [
          "bzz-raw://9adf283b8938254e3da72ae8068fac67dfc7892d50ddb9de252b9e402888c5c8",
          "dweb:/ipfs/QmQRQFakvGXqwqCFMbgznihSNnUFfQ1hADvAU3Y3RYX4bX"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/PowerfulAdminToken.sol",
    "id": 3395,
    "exportedSymbols": {
      "Context": [
        3192
      ],
      "ERC20": [
        3066
      ],
      "IERC20": [
        3144
      ],
      "IERC20Errors": [
        2373
      ],
      "IERC20Metadata": [
        3170
      ],
      "PowerfulAdminToken": [
        3394
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:2427:6",
    "nodes": [
      {
        "id": 3194,
        "nodeType": "PragmaDirective",
        "src": "33:23:6",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 3195,
        "nodeType": "ImportDirective",
        "src": "60:55:6",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3395,
        "sourceUnit": 3067,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3394,
        "nodeType": "ContractDefinition",
        "src": "282:2178:6",
        "nodes": [
          {
            "id": 3200,
            "nodeType": "VariableDeclaration",
            "src": "326:20:6",
            "nodes": [],
            "constant": false,
            "functionSelector": "f851a440",
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "341:5:6",
            "scope": 3394,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3199,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "326:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3204,
            "nodeType": "VariableDeclaration",
            "src": "353:46:6",
            "nodes": [],
            "constant": false,
            "functionSelector": "5734edb7",
            "mutability": "mutable",
            "name": "bannedAdresses",
            "nameLocation": "385:14:6",
            "scope": 3394,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3203,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3201,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "361:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "353:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3202,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "372:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 3208,
            "nodeType": "EventDefinition",
            "src": "408:42:6",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "4e1f1083e536396ee005a5640fc3beb4d082ac0ec24882c6b8b35121beb61c5c",
            "name": "AddressBanned",
            "nameLocation": "414:13:6",
            "parameters": {
              "id": 3207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3206,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "444:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3208,
                  "src": "428:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "428:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "427:22:6"
            }
          },
          {
            "id": 3212,
            "nodeType": "EventDefinition",
            "src": "456:44:6",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "af21b055f404aae56187594ef6bc522fbab24d4a05adc05c41c16a844b73b024",
            "name": "AddressUnbanned",
            "nameLocation": "462:15:6",
            "parameters": {
              "id": 3211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3210,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "494:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3212,
                  "src": "478:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "477:22:6"
            }
          },
          {
            "id": 3224,
            "nodeType": "ModifierDefinition",
            "src": "508:119:6",
            "nodes": [],
            "body": {
              "id": 3223,
              "nodeType": "Block",
              "src": "528:99:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3215,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3182,
                            "src": "547:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "547:12:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3217,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3200,
                          "src": "563:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "547:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792061646d696e2063616e20706572666f726d207468697320616374696f6e",
                        "id": 3219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "570:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b",
                          "typeString": "literal_string \"Only admin can perform this action\""
                        },
                        "value": "Only admin can perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b",
                          "typeString": "literal_string \"Only admin can perform this action\""
                        }
                      ],
                      "id": 3214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "539:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "539:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3221,
                  "nodeType": "ExpressionStatement",
                  "src": "539:68:6"
                },
                {
                  "id": 3222,
                  "nodeType": "PlaceholderStatement",
                  "src": "618:1:6"
                }
              ]
            },
            "name": "onlyAdmin",
            "nameLocation": "517:9:6",
            "parameters": {
              "id": 3213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "526:2:6"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3258,
            "nodeType": "FunctionDefinition",
            "src": "917:248:6",
            "nodes": [],
            "body": {
              "id": 3257,
              "nodeType": "Block",
              "src": "1056:109:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3239,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1073:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1077:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1073:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3241,
                          "name": "_initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3231,
                          "src": "1085:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 3242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1102:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3245,
                                  "name": "decimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2556,
                                  "src": "1116:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                    "typeString": "function () view returns (uint8)"
                                  }
                                },
                                "id": 3246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1116:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 3244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1108:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 3243,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1108:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1108:19:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1102:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1085:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3238,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2906,
                      "src": "1067:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1067:61:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3251,
                  "nodeType": "ExpressionStatement",
                  "src": "1067:61:6"
                },
                {
                  "expression": {
                    "id": 3255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3252,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3200,
                      "src": "1139:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3253,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1147:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1151:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1147:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1139:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3256,
                  "nodeType": "ExpressionStatement",
                  "src": "1139:18:6"
                }
              ]
            },
            "documentation": {
              "id": 3225,
              "nodeType": "StructuredDocumentation",
              "src": "635:276:6",
              "text": " @dev Constructor to initialize the token with a name, symbol and initialSupply.\n @param _name The name of token.\n @param _symbol The symbol of token.\n @param _initialSupply The initial supply of tokens to mint to the contract deployer."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3234,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3227,
                    "src": "1041:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 3235,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3229,
                    "src": "1047:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3236,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3233,
                  "name": "ERC20",
                  "nameLocations": [
                    "1035:5:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3066,
                  "src": "1035:5:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1035:20:6"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3227,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "953:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3258,
                  "src": "939:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3226,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3229,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "983:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3258,
                  "src": "969:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3228,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3231,
                  "mutability": "mutable",
                  "name": "_initialSupply",
                  "nameLocation": "1009:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3258,
                  "src": "1001:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "928:106:6"
            },
            "returnParameters": {
              "id": 3237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1056:0:6"
            },
            "scope": 3394,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3270,
            "nodeType": "FunctionDefinition",
            "src": "1173:94:6",
            "nodes": [],
            "body": {
              "id": 3269,
              "nodeType": "Block",
              "src": "1231:36:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3265,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3200,
                      "src": "1242:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3266,
                      "name": "_newAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3260,
                      "src": "1250:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1242:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3268,
                  "nodeType": "ExpressionStatement",
                  "src": "1242:17:6"
                }
              ]
            },
            "functionSelector": "8f283970",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3263,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3262,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "1222:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3224,
                  "src": "1222:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1222:9:6"
              }
            ],
            "name": "changeAdmin",
            "nameLocation": "1182:11:6",
            "parameters": {
              "id": 3261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3260,
                  "mutability": "mutable",
                  "name": "_newAdmin",
                  "nameLocation": "1202:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3270,
                  "src": "1194:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1193:19:6"
            },
            "returnParameters": {
              "id": 3264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1231:0:6"
            },
            "scope": 3394,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3296,
            "nodeType": "FunctionDefinition",
            "src": "1275:208:6",
            "nodes": [],
            "body": {
              "id": 3295,
              "nodeType": "Block",
              "src": "1329:154:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1348:22:6",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3278,
                            "name": "bannedAdresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3204,
                            "src": "1349:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3280,
                          "indexExpression": {
                            "id": 3279,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3272,
                            "src": "1364:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1349:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4164647265737320697320616c72656164792062616e6e6564",
                        "id": 3282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1372:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be95605f893889b17371d6ba078d67e418a82f29b4827ead36779f4b78ce3365",
                          "typeString": "literal_string \"Address is already banned\""
                        },
                        "value": "Address is already banned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be95605f893889b17371d6ba078d67e418a82f29b4827ead36779f4b78ce3365",
                          "typeString": "literal_string \"Address is already banned\""
                        }
                      ],
                      "id": 3277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1340:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1340:60:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3284,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:60:6"
                },
                {
                  "expression": {
                    "id": 3289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3285,
                        "name": "bannedAdresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3204,
                        "src": "1411:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3287,
                      "indexExpression": {
                        "id": 3286,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3272,
                        "src": "1426:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1411:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1435:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1411:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3290,
                  "nodeType": "ExpressionStatement",
                  "src": "1411:28:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3292,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3272,
                        "src": "1469:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3291,
                      "name": "AddressBanned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3208,
                      "src": "1455:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1455:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3294,
                  "nodeType": "EmitStatement",
                  "src": "1450:25:6"
                }
              ]
            },
            "functionSelector": "7f49f709",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3275,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3274,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "1319:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3224,
                  "src": "1319:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1319:9:6"
              }
            ],
            "name": "banAddress",
            "nameLocation": "1284:10:6",
            "parameters": {
              "id": 3273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3272,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "1303:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3296,
                  "src": "1295:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1295:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1294:15:6"
            },
            "returnParameters": {
              "id": 3276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1329:0:6"
            },
            "scope": 3394,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3321,
            "nodeType": "FunctionDefinition",
            "src": "1491:214:6",
            "nodes": [],
            "body": {
              "id": 3320,
              "nodeType": "Block",
              "src": "1550:155:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 3304,
                          "name": "bannedAdresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3204,
                          "src": "1569:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3306,
                        "indexExpression": {
                          "id": 3305,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3298,
                          "src": "1584:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1569:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4164647265737320697320616c72656164792062616e6e6564",
                        "id": 3307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1592:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be95605f893889b17371d6ba078d67e418a82f29b4827ead36779f4b78ce3365",
                          "typeString": "literal_string \"Address is already banned\""
                        },
                        "value": "Address is already banned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be95605f893889b17371d6ba078d67e418a82f29b4827ead36779f4b78ce3365",
                          "typeString": "literal_string \"Address is already banned\""
                        }
                      ],
                      "id": 3303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1561:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1561:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3309,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:59:6"
                },
                {
                  "expression": {
                    "id": 3314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3310,
                        "name": "bannedAdresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3204,
                        "src": "1631:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3312,
                      "indexExpression": {
                        "id": 3311,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3298,
                        "src": "1646:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1631:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1655:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1631:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3315,
                  "nodeType": "ExpressionStatement",
                  "src": "1631:28:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3317,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3298,
                        "src": "1691:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3316,
                      "name": "AddressUnbanned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3212,
                      "src": "1675:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1675:22:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3319,
                  "nodeType": "EmitStatement",
                  "src": "1670:27:6"
                }
              ]
            },
            "functionSelector": "a13ef0f2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3301,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3300,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "1540:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3224,
                  "src": "1540:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1540:9:6"
              }
            ],
            "name": "unBannedAddress",
            "nameLocation": "1500:15:6",
            "parameters": {
              "id": 3299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3298,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "1524:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3321,
                  "src": "1516:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1516:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1515:15:6"
            },
            "returnParameters": {
              "id": 3302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1550:0:6"
            },
            "scope": 3394,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3356,
            "nodeType": "FunctionDefinition",
            "src": "1812:255:6",
            "nodes": [],
            "body": {
              "id": 3355,
              "nodeType": "Block",
              "src": "1888:179:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1907:27:6",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3333,
                            "name": "bannedAdresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3204,
                            "src": "1908:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3336,
                          "indexExpression": {
                            "expression": {
                              "id": 3334,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1923:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1927:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1923:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1908:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e6465722069732062616e6e6564",
                        "id": 3338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1936:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd393ec34adce997bb469eeb412c54ce6ecb7922c6dba70fbb33d53480368b91",
                          "typeString": "literal_string \"Sender is banned\""
                        },
                        "value": "Sender is banned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd393ec34adce997bb469eeb412c54ce6ecb7922c6dba70fbb33d53480368b91",
                          "typeString": "literal_string \"Sender is banned\""
                        }
                      ],
                      "id": 3332,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1899:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1899:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3340,
                  "nodeType": "ExpressionStatement",
                  "src": "1899:56:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1974:19:6",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3342,
                            "name": "bannedAdresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3204,
                            "src": "1975:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3344,
                          "indexExpression": {
                            "id": 3343,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3324,
                            "src": "1990:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1975:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526563697069656e742069732062616e6e6564",
                        "id": 3346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1995:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56401d07cbc38095331db71da3f2f9d102a32f805935988396fda229cbe21ae0",
                          "typeString": "literal_string \"Recipient is banned\""
                        },
                        "value": "Recipient is banned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56401d07cbc38095331db71da3f2f9d102a32f805935988396fda229cbe21ae0",
                          "typeString": "literal_string \"Recipient is banned\""
                        }
                      ],
                      "id": 3341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1966:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1966:51:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3348,
                  "nodeType": "ExpressionStatement",
                  "src": "1966:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3351,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3324,
                        "src": "2050:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3352,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3326,
                        "src": "2053:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3349,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2035:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PowerfulAdminToken_$3394_$",
                          "typeString": "type(contract super PowerfulAdminToken)"
                        }
                      },
                      "id": 3350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2041:8:6",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2602,
                      "src": "2035:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 3353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2035:24:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3331,
                  "id": 3354,
                  "nodeType": "Return",
                  "src": "2028:31:6"
                }
              ]
            },
            "baseFunctions": [
              2602
            ],
            "documentation": {
              "id": 3322,
              "nodeType": "StructuredDocumentation",
              "src": "1713:93:6",
              "text": "@notice Override the transfer function to check for sanctions before allowing a transfer."
            },
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1821:8:6",
            "overrides": {
              "id": 3328,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1864:8:6"
            },
            "parameters": {
              "id": 3327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3324,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1838:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3356,
                  "src": "1830:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1830:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3326,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1850:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3356,
                  "src": "1842:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1842:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1829:27:6"
            },
            "returnParameters": {
              "id": 3331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3330,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3356,
                  "src": "1882:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3329,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1882:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1881:6:6"
            },
            "scope": 3394,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3393,
            "nodeType": "FunctionDefinition",
            "src": "2178:279:6",
            "nodes": [],
            "body": {
              "id": 3392,
              "nodeType": "Block",
              "src": "2272:185:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2291:21:6",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3370,
                            "name": "bannedAdresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3204,
                            "src": "2292:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3372,
                          "indexExpression": {
                            "id": 3371,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3359,
                            "src": "2307:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2292:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e6465722069732062616e6e6564",
                        "id": 3374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2314:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd393ec34adce997bb469eeb412c54ce6ecb7922c6dba70fbb33d53480368b91",
                          "typeString": "literal_string \"Sender is banned\""
                        },
                        "value": "Sender is banned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd393ec34adce997bb469eeb412c54ce6ecb7922c6dba70fbb33d53480368b91",
                          "typeString": "literal_string \"Sender is banned\""
                        }
                      ],
                      "id": 3369,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2283:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2283:50:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3376,
                  "nodeType": "ExpressionStatement",
                  "src": "2283:50:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2352:19:6",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3378,
                            "name": "bannedAdresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3204,
                            "src": "2353:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3380,
                          "indexExpression": {
                            "id": 3379,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3361,
                            "src": "2368:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2353:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526563697069656e742069732062616e6e6564",
                        "id": 3382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2373:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56401d07cbc38095331db71da3f2f9d102a32f805935988396fda229cbe21ae0",
                          "typeString": "literal_string \"Recipient is banned\""
                        },
                        "value": "Recipient is banned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56401d07cbc38095331db71da3f2f9d102a32f805935988396fda229cbe21ae0",
                          "typeString": "literal_string \"Recipient is banned\""
                        }
                      ],
                      "id": 3377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2344:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2344:51:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3384,
                  "nodeType": "ExpressionStatement",
                  "src": "2344:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3387,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3359,
                        "src": "2432:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3388,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3361,
                        "src": "2438:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3389,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3363,
                        "src": "2443:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3385,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2413:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PowerfulAdminToken_$3394_$",
                          "typeString": "type(contract super PowerfulAdminToken)"
                        }
                      },
                      "id": 3386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2419:12:6",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2675,
                      "src": "2413:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 3390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2413:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3368,
                  "id": 3391,
                  "nodeType": "Return",
                  "src": "2406:43:6"
                }
              ]
            },
            "baseFunctions": [
              2675
            ],
            "documentation": {
              "id": 3357,
              "nodeType": "StructuredDocumentation",
              "src": "2075:97:6",
              "text": "@notice Override the transferFrom function to check for sanctions before allowing a transfer."
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "2187:12:6",
            "overrides": {
              "id": 3365,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2248:8:6"
            },
            "parameters": {
              "id": 3364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3359,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2208:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3393,
                  "src": "2200:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2200:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3361,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2222:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3393,
                  "src": "2214:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3360,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2214:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3363,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2234:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3393,
                  "src": "2226:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2226:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2199:41:6"
            },
            "returnParameters": {
              "id": 3368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3367,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3393,
                  "src": "2266:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3366,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2266:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2265:6:6"
            },
            "scope": 3394,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3197,
              "name": "ERC20",
              "nameLocations": [
                "313:5:6"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3066,
              "src": "313:5:6"
            },
            "id": 3198,
            "nodeType": "InheritanceSpecifier",
            "src": "313:5:6"
          }
        ],
        "canonicalName": "PowerfulAdminToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3196,
          "nodeType": "StructuredDocumentation",
          "src": "119:159:6",
          "text": " @title PowerfulAdminToken\n@dev A custom ERC20 token contract that allows an admin to ban specified addresses from sending and receiving tokens."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3394,
          3066,
          2373,
          3170,
          3144,
          3192
        ],
        "name": "PowerfulAdminToken",
        "nameLocation": "291:18:6",
        "scope": 3395,
        "usedErrors": [
          2343,
          2348,
          2353,
          2362,
          2367,
          2372,
          2512
        ],
        "usedEvents": [
          3078,
          3087,
          3208,
          3212
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 6
}