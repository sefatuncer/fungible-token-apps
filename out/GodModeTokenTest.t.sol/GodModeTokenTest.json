{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "godModeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSetGodModeAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransferWithGodMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract GodModeToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "user1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b50611e848061002d6000396000f3fe60806040523480156200001157600080fd5b50600436106200009f5760003560e01c8063ac1717b0116200006e578063ac1717b014620000ff578063ba414fa61462000113578063eed43c3c146200012e578063fa7626d41462000138578063fc0c546a146200014657600080fd5b80630a9254e414620000a4578063175b498f14620000b05780633b13099514620000ba5780638da5cb5b14620000eb575b600080fd5b620000ae62000160565b005b620000ae62000246565b600254620000ce906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600154620000ce906001600160a01b031681565b600354620000ce906001600160a01b031681565b6200011d62000350565b6040519015158152602001620000e2565b620000ae62000485565b6000546200011d9060ff1681565b600054620000ce906201000090046001600160a01b031681565b600180546001600160a01b03199081163090811790925560028054821661012390811790915560038054909216610456179091556040516103e89290620001a79062000b26565b60a08082526007908201526626bcaa37b5b2b760c91b60c082015260e060208201819052600390820152624d544b60e81b61010082015260408101939093526001600160a01b03918216606084015216608082015261012001604051809103906000f0801580156200021d573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b6000546040516341eadbd360e11b815261078960048201819052916201000090046001600160a01b0316906383d5b7a690602401600060405180830381600087803b1580156200029557600080fd5b505af1158015620002aa573d6000803e3d6000fd5b505050506200034d600060029054906101000a90046001600160a01b03166001600160a01b0316633b1309956040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000306573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200032c919062000b34565b8260405180606001604052806022815260200162001d936022913962000828565b50565b60008054610100900460ff1615620003715750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620004805760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000402917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000b8c565b60408051601f19818403018152908290526200041e9162000bbf565b6000604051808303816000865af19150503d80600081146200045d576040519150601f19603f3d011682016040523d82523d6000602084013e62000462565b606091505b50915050808060200190518101906200047c919062000bdd565b9150505b919050565b6000546001546040516370a0823160e01b81526001600160a01b0391821660048201526200052792620100009004909116906370a0823190602401602060405180830381865afa158015620004de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000504919062000c01565b6103e860405180606001604052806023815260200162001e02602391396200088c565b6000546002546040516370a0823160e01b81526001600160a01b039182166004820152620005c892620100009004909116906370a0823190602401602060405180830381865afa15801562000580573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005a6919062000c01565b60006040518060600160405280602c815260200162001d67602c91396200088c565b6000546003546040516370a0823160e01b81526001600160a01b0391821660048201526200066992620100009004909116906370a0823190602401602060405180830381865afa15801562000621573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000647919062000c01565b600060405180606001604052806023815260200162001db5602391396200088c565b6000546001546003546040516313fc892760e11b81526001600160a01b039283166004820152908216602482015260646044820181905292620100009004909116906327f9124e908301600060405180830381600087803b158015620006ce57600080fd5b505af1158015620006e3573d6000803e3d6000fd5b50506000546001546040516370a0823160e01b81526001600160a01b039182166004820152620007889450620100009092041691506370a0823190602401602060405180830381865afa1580156200073f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000765919062000c01565b6103846040518060600160405280602a815260200162001e25602a91396200088c565b6000546003546040516370a0823160e01b81526001600160a01b0391821660048201526200034d92620100009004909116906370a0823190602401602060405180830381865afa158015620007e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000807919062000c01565b826040518060600160405280602a815260200162001dd8602a91396200088c565b816001600160a01b0316836001600160a01b03161462000887577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405162000873919062000c49565b60405180910390a1620008878383620008bf565b505050565b80838314620008b95760405162461bcd60e51b8152600401620008b0919062000c7a565b60405180910390fd5b50505050565b806001600160a01b0316826001600160a01b03161462000a0f577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620009479060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526001600160a01b038316602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a162000a0f62000a13565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000b155760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000ab0929160200162000b8c565b60408051601f198184030181529082905262000acc9162000bbf565b6000604051808303816000865af19150503d806000811462000b0b576040519150601f19603f3d011682016040523d82523d6000602084013e62000b10565b606091505b505050505b6000805461ff001916610100179055565b6110d78062000c9083390190565b60006020828403121562000b4757600080fd5b81516001600160a01b038116811462000b5f57600080fd5b9392505050565b60005b8381101562000b8357818101518382015260200162000b69565b50506000910152565b6001600160e01b031983168152815160009062000bb181600485016020870162000b66565b919091016004019392505050565b6000825162000bd381846020870162000b66565b9190910192915050565b60006020828403121562000bf057600080fd5b8151801515811462000b5f57600080fd5b60006020828403121562000c1457600080fd5b5051919050565b6000815180845262000c3581602086016020860162000b66565b601f01601f19169290920160200192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600062000b5f608083018462000c1b565b60208152600062000b5f602083018462000c1b56fe60806040523480156200001157600080fd5b50604051620010d7380380620010d7833981016040819052620000349162000367565b80858560036200004583826200048f565b5060046200005482826200048f565b5050506200006881620000a060201b60201c565b50620000753384620000be565b50600780546001600160a01b0319166001600160a01b03929092169190911790555062000583915050565b600680546001600160a01b0319169055620000bb8162000100565b50565b6001600160a01b038216620000ee5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620000fc6000838362000152565b5050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038316620001815780600260008282546200017591906200055b565b90915550620001f59050565b6001600160a01b03831660009081526020819052604090205481811015620001d65760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000e5565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620002135760028054829003905562000232565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200027891815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002ad57600080fd5b81516001600160401b0380821115620002ca57620002ca62000285565b604051601f8301601f19908116603f01168101908282118183101715620002f557620002f562000285565b816040528381526020925086838588010111156200031257600080fd5b600091505b8382101562000336578582018301518183018401529082019062000317565b600093810190920192909252949350505050565b80516001600160a01b03811681146200036257600080fd5b919050565b600080600080600060a086880312156200038057600080fd5b85516001600160401b03808211156200039857600080fd5b620003a689838a016200029b565b96506020880151915080821115620003bd57600080fd5b50620003cc888289016200029b565b94505060408601519250620003e4606087016200034a565b9150620003f4608087016200034a565b90509295509295909350565b600181811c908216806200041557607f821691505b6020821081036200043657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200048a57600081815260208120601f850160051c81016020861015620004655750805b601f850160051c820191505b81811015620004865782815560010162000471565b5050505b505050565b81516001600160401b03811115620004ab57620004ab62000285565b620004c381620004bc845462000400565b846200043c565b602080601f831160018114620004fb5760008415620004e25750858301515b600019600386901b1c1916600185901b17855562000486565b600085815260208120601f198616915b828110156200052c578886015182559484019460019091019084016200050b565b50858210156200054b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200057d57634e487b7160e01b600052601160045260246000fd5b92915050565b610b4480620005936000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a457c2d711610071578063a457c2d714610253578063a9059cbb14610266578063dd62ed3e14610279578063e30c39781461028c578063f2fde38b1461029d57600080fd5b8063715018a61461021757806379ba50971461021f57806383d5b7a6146102275780638da5cb5b1461023a57806395d89b411461024b57600080fd5b806327f9124e116100f457806327f9124e1461018c578063313ce567146101a157806339509351146101b05780633b130995146101c357806370a08231146101ee57600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e6102b0565b60405161013b919061098e565b60405180910390f35b6101576101523660046109f8565b610342565b604051901515815260200161013b565b6002545b60405190815260200161013b565b610157610187366004610a22565b61035c565b61019f61019a366004610a22565b610380565b005b6040516012815260200161013b565b6101576101be3660046109f8565b61046c565b6007546101d6906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61016b6101fc366004610a5e565b6001600160a01b031660009081526020819052604090205490565b61019f61048e565b61019f6104a2565b61019f610235366004610a5e565b6104e6565b6005546001600160a01b03166101d6565b61012e610510565b6101576102613660046109f8565b61051f565b6101576102743660046109f8565b610576565b61016b610287366004610a80565b610584565b6006546001600160a01b03166101d6565b61019f6102ab366004610a5e565b6105af565b6060600380546102bf90610ab3565b80601f01602080910402602001604051908101604052809291908181526020018280546102eb90610ab3565b80156103385780601f1061030d57610100808354040283529160200191610338565b820191906000526020600020905b81548152906001019060200180831161031b57829003601f168201915b5050505050905090565b600033610350818585610620565b60019150505b92915050565b60003361036a858285610632565b610375858585610698565b506001949350505050565b6007546001600160a01b031633146103f45760405162461bcd60e51b815260206004820152602c60248201527f4f6e6c7920676f64206d6f646520616464726573732063616e2063616c6c207460448201526b3434b990333ab731ba34b7b760a11b60648201526084015b60405180910390fd5b6103ff838383610698565b604080517453656e64696e67207769746820476f64206d6f646560581b81526001600160a01b0385811660208301528416818301526060810183905290517f0e6860d111f5607fabc9a76b988c40552d13cc0cbd4e567186f314e065d705329181900360800190a1505050565b60003361035081858561047f8383610584565b6104899190610aed565b610620565b6104966106f7565b6104a06000610724565b565b60065433906001600160a01b031681146104da5760405163118cdaa760e01b81526001600160a01b03821660048201526024016103eb565b6104e381610724565b50565b6104ee6106f7565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6060600480546102bf90610ab3565b6000338161052d8286610584565b90508381101561056957604051632983c0c360e21b81526001600160a01b038616600482015260248101829052604481018590526064016103eb565b6103758286868403610620565b600033610350818585610698565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105b76106f7565b600680546001600160a01b0383166001600160a01b031990911681179091556105e86005546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b61062d838383600161073d565b505050565b600061063e8484610584565b90506000198114610692578181101561068357604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103eb565b6106928484848403600061073d565b50505050565b6001600160a01b0383166106c257604051634b637e8f60e11b8152600060048201526024016103eb565b6001600160a01b0382166106ec5760405163ec442f0560e01b8152600060048201526024016103eb565b61062d838383610812565b6005546001600160a01b031633146104a05760405163118cdaa760e01b81523360048201526024016103eb565b600680546001600160a01b03191690556104e38161093c565b6001600160a01b0384166107675760405163e602df0560e01b8152600060048201526024016103eb565b6001600160a01b03831661079157604051634a1406b160e11b8152600060048201526024016103eb565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561069257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161080491815260200190565b60405180910390a350505050565b6001600160a01b03831661083d5780600260008282546108329190610aed565b909155506108af9050565b6001600160a01b038316600090815260208190526040902054818110156108905760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103eb565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166108cb576002805482900390556108ea565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161092f91815260200190565b60405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b818110156109bb5785810183015185820160400152820161099f565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109f357600080fd5b919050565b60008060408385031215610a0b57600080fd5b610a14836109dc565b946020939093013593505050565b600080600060608486031215610a3757600080fd5b610a40846109dc565b9250610a4e602085016109dc565b9150604084013590509250925092565b600060208284031215610a7057600080fd5b610a79826109dc565b9392505050565b60008060408385031215610a9357600080fd5b610a9c836109dc565b9150610aaa602084016109dc565b90509250929050565b600181811c90821680610ac757607f821691505b602082108103610ae757634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561035657634e487b7160e01b600052601160045260246000fdfea26469706673582212209590b5269d5ed1432e20d0ab91e3268600445fd7c886efeb2bd09afac374157764736f6c63430008150033496e636f727265637420696e697469616c2062616c616e636520666f7220676f644d6f646541646472657373476f64204d6f646520616464726573732073686f756c642062652075706461746564496e636f727265637420696e697469616c2062616c616e636520666f72207573657231496e636f72726563742062616c616e636520666f72207573657231206166746572207472616e73666572496e636f727265637420696e697469616c2062616c616e636520666f72206f776e6572496e636f72726563742062616c616e636520666f72206f776e6572206166746572207472616e73666572a2646970667358221220fb9ba2359da773b154a57c191b0d93167e66868d1ffe5d079b3aff8fb6976b2964736f6c63430008150033",
    "sourceMap": "242:1680:10:-:0;;;1609:26:0;;;-1:-1:-1;;1609:26:0;1631:4;1609:26;;;242:1680:10;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600436106200009f5760003560e01c8063ac1717b0116200006e578063ac1717b014620000ff578063ba414fa61462000113578063eed43c3c146200012e578063fa7626d41462000138578063fc0c546a146200014657600080fd5b80630a9254e414620000a4578063175b498f14620000b05780633b13099514620000ba5780638da5cb5b14620000eb575b600080fd5b620000ae62000160565b005b620000ae62000246565b600254620000ce906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600154620000ce906001600160a01b031681565b600354620000ce906001600160a01b031681565b6200011d62000350565b6040519015158152602001620000e2565b620000ae62000485565b6000546200011d9060ff1681565b600054620000ce906201000090046001600160a01b031681565b600180546001600160a01b03199081163090811790925560028054821661012390811790915560038054909216610456179091556040516103e89290620001a79062000b26565b60a08082526007908201526626bcaa37b5b2b760c91b60c082015260e060208201819052600390820152624d544b60e81b61010082015260408101939093526001600160a01b03918216606084015216608082015261012001604051809103906000f0801580156200021d573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b6000546040516341eadbd360e11b815261078960048201819052916201000090046001600160a01b0316906383d5b7a690602401600060405180830381600087803b1580156200029557600080fd5b505af1158015620002aa573d6000803e3d6000fd5b505050506200034d600060029054906101000a90046001600160a01b03166001600160a01b0316633b1309956040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000306573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200032c919062000b34565b8260405180606001604052806022815260200162001d936022913962000828565b50565b60008054610100900460ff1615620003715750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620004805760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000402917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000b8c565b60408051601f19818403018152908290526200041e9162000bbf565b6000604051808303816000865af19150503d80600081146200045d576040519150601f19603f3d011682016040523d82523d6000602084013e62000462565b606091505b50915050808060200190518101906200047c919062000bdd565b9150505b919050565b6000546001546040516370a0823160e01b81526001600160a01b0391821660048201526200052792620100009004909116906370a0823190602401602060405180830381865afa158015620004de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000504919062000c01565b6103e860405180606001604052806023815260200162001e02602391396200088c565b6000546002546040516370a0823160e01b81526001600160a01b039182166004820152620005c892620100009004909116906370a0823190602401602060405180830381865afa15801562000580573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005a6919062000c01565b60006040518060600160405280602c815260200162001d67602c91396200088c565b6000546003546040516370a0823160e01b81526001600160a01b0391821660048201526200066992620100009004909116906370a0823190602401602060405180830381865afa15801562000621573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000647919062000c01565b600060405180606001604052806023815260200162001db5602391396200088c565b6000546001546003546040516313fc892760e11b81526001600160a01b039283166004820152908216602482015260646044820181905292620100009004909116906327f9124e908301600060405180830381600087803b158015620006ce57600080fd5b505af1158015620006e3573d6000803e3d6000fd5b50506000546001546040516370a0823160e01b81526001600160a01b039182166004820152620007889450620100009092041691506370a0823190602401602060405180830381865afa1580156200073f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000765919062000c01565b6103846040518060600160405280602a815260200162001e25602a91396200088c565b6000546003546040516370a0823160e01b81526001600160a01b0391821660048201526200034d92620100009004909116906370a0823190602401602060405180830381865afa158015620007e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000807919062000c01565b826040518060600160405280602a815260200162001dd8602a91396200088c565b816001600160a01b0316836001600160a01b03161462000887577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405162000873919062000c49565b60405180910390a1620008878383620008bf565b505050565b80838314620008b95760405162461bcd60e51b8152600401620008b0919062000c7a565b60405180910390fd5b50505050565b806001600160a01b0316826001600160a01b03161462000a0f577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620009479060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526001600160a01b038316602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a162000a0f62000a13565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000b155760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000ab0929160200162000b8c565b60408051601f198184030181529082905262000acc9162000bbf565b6000604051808303816000865af19150503d806000811462000b0b576040519150601f19603f3d011682016040523d82523d6000602084013e62000b10565b606091505b505050505b6000805461ff001916610100179055565b6110d78062000c9083390190565b60006020828403121562000b4757600080fd5b81516001600160a01b038116811462000b5f57600080fd5b9392505050565b60005b8381101562000b8357818101518382015260200162000b69565b50506000910152565b6001600160e01b031983168152815160009062000bb181600485016020870162000b66565b919091016004019392505050565b6000825162000bd381846020870162000b66565b9190910192915050565b60006020828403121562000bf057600080fd5b8151801515811462000b5f57600080fd5b60006020828403121562000c1457600080fd5b5051919050565b6000815180845262000c3581602086016020860162000b66565b601f01601f19169290920160200192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600062000b5f608083018462000c1b565b60208152600062000b5f602083018462000c1b56fe60806040523480156200001157600080fd5b50604051620010d7380380620010d7833981016040819052620000349162000367565b80858560036200004583826200048f565b5060046200005482826200048f565b5050506200006881620000a060201b60201c565b50620000753384620000be565b50600780546001600160a01b0319166001600160a01b03929092169190911790555062000583915050565b600680546001600160a01b0319169055620000bb8162000100565b50565b6001600160a01b038216620000ee5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620000fc6000838362000152565b5050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038316620001815780600260008282546200017591906200055b565b90915550620001f59050565b6001600160a01b03831660009081526020819052604090205481811015620001d65760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000e5565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620002135760028054829003905562000232565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200027891815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002ad57600080fd5b81516001600160401b0380821115620002ca57620002ca62000285565b604051601f8301601f19908116603f01168101908282118183101715620002f557620002f562000285565b816040528381526020925086838588010111156200031257600080fd5b600091505b8382101562000336578582018301518183018401529082019062000317565b600093810190920192909252949350505050565b80516001600160a01b03811681146200036257600080fd5b919050565b600080600080600060a086880312156200038057600080fd5b85516001600160401b03808211156200039857600080fd5b620003a689838a016200029b565b96506020880151915080821115620003bd57600080fd5b50620003cc888289016200029b565b94505060408601519250620003e4606087016200034a565b9150620003f4608087016200034a565b90509295509295909350565b600181811c908216806200041557607f821691505b6020821081036200043657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200048a57600081815260208120601f850160051c81016020861015620004655750805b601f850160051c820191505b81811015620004865782815560010162000471565b5050505b505050565b81516001600160401b03811115620004ab57620004ab62000285565b620004c381620004bc845462000400565b846200043c565b602080601f831160018114620004fb5760008415620004e25750858301515b600019600386901b1c1916600185901b17855562000486565b600085815260208120601f198616915b828110156200052c578886015182559484019460019091019084016200050b565b50858210156200054b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200057d57634e487b7160e01b600052601160045260246000fd5b92915050565b610b4480620005936000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a457c2d711610071578063a457c2d714610253578063a9059cbb14610266578063dd62ed3e14610279578063e30c39781461028c578063f2fde38b1461029d57600080fd5b8063715018a61461021757806379ba50971461021f57806383d5b7a6146102275780638da5cb5b1461023a57806395d89b411461024b57600080fd5b806327f9124e116100f457806327f9124e1461018c578063313ce567146101a157806339509351146101b05780633b130995146101c357806370a08231146101ee57600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e6102b0565b60405161013b919061098e565b60405180910390f35b6101576101523660046109f8565b610342565b604051901515815260200161013b565b6002545b60405190815260200161013b565b610157610187366004610a22565b61035c565b61019f61019a366004610a22565b610380565b005b6040516012815260200161013b565b6101576101be3660046109f8565b61046c565b6007546101d6906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61016b6101fc366004610a5e565b6001600160a01b031660009081526020819052604090205490565b61019f61048e565b61019f6104a2565b61019f610235366004610a5e565b6104e6565b6005546001600160a01b03166101d6565b61012e610510565b6101576102613660046109f8565b61051f565b6101576102743660046109f8565b610576565b61016b610287366004610a80565b610584565b6006546001600160a01b03166101d6565b61019f6102ab366004610a5e565b6105af565b6060600380546102bf90610ab3565b80601f01602080910402602001604051908101604052809291908181526020018280546102eb90610ab3565b80156103385780601f1061030d57610100808354040283529160200191610338565b820191906000526020600020905b81548152906001019060200180831161031b57829003601f168201915b5050505050905090565b600033610350818585610620565b60019150505b92915050565b60003361036a858285610632565b610375858585610698565b506001949350505050565b6007546001600160a01b031633146103f45760405162461bcd60e51b815260206004820152602c60248201527f4f6e6c7920676f64206d6f646520616464726573732063616e2063616c6c207460448201526b3434b990333ab731ba34b7b760a11b60648201526084015b60405180910390fd5b6103ff838383610698565b604080517453656e64696e67207769746820476f64206d6f646560581b81526001600160a01b0385811660208301528416818301526060810183905290517f0e6860d111f5607fabc9a76b988c40552d13cc0cbd4e567186f314e065d705329181900360800190a1505050565b60003361035081858561047f8383610584565b6104899190610aed565b610620565b6104966106f7565b6104a06000610724565b565b60065433906001600160a01b031681146104da5760405163118cdaa760e01b81526001600160a01b03821660048201526024016103eb565b6104e381610724565b50565b6104ee6106f7565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6060600480546102bf90610ab3565b6000338161052d8286610584565b90508381101561056957604051632983c0c360e21b81526001600160a01b038616600482015260248101829052604481018590526064016103eb565b6103758286868403610620565b600033610350818585610698565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105b76106f7565b600680546001600160a01b0383166001600160a01b031990911681179091556105e86005546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b61062d838383600161073d565b505050565b600061063e8484610584565b90506000198114610692578181101561068357604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103eb565b6106928484848403600061073d565b50505050565b6001600160a01b0383166106c257604051634b637e8f60e11b8152600060048201526024016103eb565b6001600160a01b0382166106ec5760405163ec442f0560e01b8152600060048201526024016103eb565b61062d838383610812565b6005546001600160a01b031633146104a05760405163118cdaa760e01b81523360048201526024016103eb565b600680546001600160a01b03191690556104e38161093c565b6001600160a01b0384166107675760405163e602df0560e01b8152600060048201526024016103eb565b6001600160a01b03831661079157604051634a1406b160e11b8152600060048201526024016103eb565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561069257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161080491815260200190565b60405180910390a350505050565b6001600160a01b03831661083d5780600260008282546108329190610aed565b909155506108af9050565b6001600160a01b038316600090815260208190526040902054818110156108905760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103eb565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166108cb576002805482900390556108ea565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161092f91815260200190565b60405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b818110156109bb5785810183015185820160400152820161099f565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109f357600080fd5b919050565b60008060408385031215610a0b57600080fd5b610a14836109dc565b946020939093013593505050565b600080600060608486031215610a3757600080fd5b610a40846109dc565b9250610a4e602085016109dc565b9150604084013590509250925092565b600060208284031215610a7057600080fd5b610a79826109dc565b9392505050565b60008060408385031215610a9357600080fd5b610a9c836109dc565b9150610aaa602084016109dc565b90509250929050565b600181811c90821680610ac757607f821691505b602082108103610ae757634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561035657634e487b7160e01b600052601160045260246000fdfea26469706673582212209590b5269d5ed1432e20d0ab91e3268600445fd7c886efeb2bd09afac374157764736f6c63430008150033496e636f727265637420696e697469616c2062616c616e636520666f7220676f644d6f646541646472657373476f64204d6f646520616464726573732073686f756c642062652075706461746564496e636f727265637420696e697469616c2062616c616e636520666f72207573657231496e636f72726563742062616c616e636520666f72207573657231206166746572207472616e73666572496e636f727265637420696e697469616c2062616c616e636520666f72206f776e6572496e636f72726563742062616c616e636520666f72206f776e6572206166746572207472616e73666572a2646970667358221220fb9ba2359da773b154a57c191b0d93167e66868d1ffe5d079b3aff8fb6976b2964736f6c63430008150033",
    "sourceMap": "242:1680:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;409:399;;;:::i;:::-;;1606:313;;;:::i;344:29::-;;;;;-1:-1:-1;;;;;344:29:10;;;;;;-1:-1:-1;;;;;178:32:11;;;160:51;;148:2;133:18;344:29:10;;;;;;;;317:20;;;;;-1:-1:-1;;;;;317:20:10;;;380;;;;;-1:-1:-1;;;;;380:20:10;;;1865:600:0;;;:::i;:::-;;;387:14:11;;380:22;362:41;;350:2;335:18;1865:600:0;222:187:11;816:782:10;;;:::i;1609:26:0:-;;;;;;;;;285:25:10;;;;;;;;-1:-1:-1;;;;;285:25:10;;;409:399;444:5;:21;;-1:-1:-1;;;;;;444:21:10;;;460:4;444:21;;;;;;538:14;:31;;;;563:5;538:31;;;;;;638:5;:22;;;;;654:5;638:22;;;;737:63;;772:4;;460;737:63;;;:::i;:::-;1041:3:11;1023:22;;;1082:1;1061:19;;;1054:30;-1:-1:-1;;;1115:3:11;1100:19;;1093:38;1169:3;1162:4;1147:20;;1140:33;;;1210:1;1189:19;;;1182:30;-1:-1:-1;;;1243:3:11;1228:19;;1221:34;1322:2;1307:18;;1300:34;;;;-1:-1:-1;;;;;1408:15:11;;;-1:-1:-1;1388:18:11;;1381:43;1461:15;-1:-1:-1;1440:19:11;;1433:44;1287:3;1272:19;737:63:10;;;;;;;;;;;;;;;;;;;;;;;729:5;;:71;;;;;-1:-1:-1;;;;;729:71:10;;;;;-1:-1:-1;;;;;729:71:10;;;;;;409:399::o;1606:313::-;1716:25;1769:5;:42;;-1:-1:-1;;;1769:42:10;;1752:5;1769:42;;;160:51:11;;;1752:5:10;1769;;;-1:-1:-1;;;;;1769:5:10;;:23;;133:18:11;;1769:42:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1822:89;1831:5;;;;;;;;;-1:-1:-1;;;;;1831:5:10;-1:-1:-1;;;;;1831:20:10;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1855:17;1822:89;;;;;;;;;;;;;;;;;:8;:89::i;:::-;1646:273;1606:313::o;1865:600:0:-;1899:4;1920:7;;;;;;;1916:542;;;-1:-1:-1;1951:7:0;;;;;;;;1865:600::o;1916:542::-;1991:17;3077:42;3065:55;3148:16;2031:382;;2251:43;;;1712:64;2251:43;;;1957:51:11;;;-1:-1:-1;;;2024:18:11;;;2017:34;2251:43:0;;;;;;;;;1930:18:11;;;2251:43:0;;;-1:-1:-1;;1712:64:0;;2139:178;;2189:34;;2139:178;;;:::i;:::-;;;;-1:-1:-1;;2139:178:0;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:0:o;816:782:10:-;913:5;;929;;913:22;;-1:-1:-1;;;913:22:10;;-1:-1:-1;;;;;929:5:10;;;913:22;;;160:51:11;904:77:10;;913:5;;;;;;;:15;;133:18:11;;913:22:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;937:4;904:77;;;;;;;;;;;;;;;;;:8;:77::i;:::-;1001:5;;;1017:14;1001:31;;-1:-1:-1;;;1001:31:10;;-1:-1:-1;;;;;1017:14:10;;;1001:31;;;160:51:11;992:92:10;;1001:5;;;;;;;:15;;133:18:11;;1001:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1034:1;992:92;;;;;;;;;;;;;;;;;:8;:92::i;:::-;1104:5;;1120;;1104:22;;-1:-1:-1;;;1104:22:10;;-1:-1:-1;;;;;1120:5:10;;;1104:22;;;160:51:11;1095:74:10;;1104:5;;;;;;;:15;;133:18:11;;1104:22:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1128:1;1095:74;;;;;;;;;;;;;;;;;:8;:74::i;:::-;1227:22;1266:5;1292;;1299;;1266:55;;-1:-1:-1;;;1266:55:10;;-1:-1:-1;;;;;1292:5:10;;;1266:55;;;3709:34:11;1299:5:10;;;3759:18:11;;;3752:43;1252:3:10;3811:18:11;;;3804:34;;;1252:3:10;1266:5;;;;;;;:25;;3644:18:11;;1266:55:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1411:5:10;;1427;;1411:22;;-1:-1:-1;;;1411:22:10;;-1:-1:-1;;;;;1427:5:10;;;1411:22;;;160:51:11;1402:83:10;;-1:-1:-1;1411:5:10;;;;;;-1:-1:-1;1411:15:10;;133:18:11;;1411:22:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1435:3;1402:83;;;;;;;;;;;;;;;;;:8;:83::i;:::-;1505:5;;1521;;1505:22;;-1:-1:-1;;;1505:22:10;;-1:-1:-1;;;;;1521:5:10;;;1505:22;;;160:51:11;1496:94:10;;1505:5;;;;;;;:15;;133:18:11;;1505:22:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1529:14;1496:94;;;;;;;;;;;;;;;;;:8;:94::i;4528:190:0:-;4616:1;-1:-1:-1;;;;;4611:6:0;:1;-1:-1:-1;;;;;4611:6:0;;4607:104;;4639:31;4666:3;4639:31;;;;;;:::i;:::-;;;;;;;;4685:14;4694:1;4697;4685:8;:14::i;:::-;4528:190;;;:::o;3857:120::-;3961:7;3953:6;;;3945:24;;;;-1:-1:-1;;;3945:24:0;;;;;;;;:::i;:::-;;;;;;;;;;3857:120;;;:::o;4238:284::-;4307:1;-1:-1:-1;;;;;4302:6:0;:1;-1:-1:-1;;;;;4302:6:0;;4298:217;;4330:44;;;;;5003:2:11;4985:21;;;5042:2;5022:18;;;5015:30;5081:34;5076:2;5061:18;;5054:62;-1:-1:-1;;;5147:2:11;5132:18;;5125:35;5192:3;5177:19;;4801:401;4330:44:0;;;;;;;;4394:34;;;5419:21:11;;;5476:2;5456:18;;;5449:30;-1:-1:-1;;;5510:2:11;5495:18;;5488:40;-1:-1:-1;;;;;5602:32:11;;5595:4;5580:20;;5573:62;4394:34:0;;;;;;;5560:3:11;4394:34:0;;;4448;;;5858:21:11;;;5915:2;5895:18;;;5888:30;-1:-1:-1;;;5949:2:11;5934:18;;5927:40;-1:-1:-1;;;;;6041:32:11;;6034:4;6019:20;;6012:62;4448:34:0;;;;;;;5999:3:11;4448:34:0;;;4497:6;:4;:6::i;:::-;4238:284;;:::o;2473:443::-;3077:42;3065:55;3148:16;2517:367;;2721:67;;;1712:64;2721:67;;;6287:51:11;;;-1:-1:-1;;;6354:18:11;;;6347:34;;;;2781:4:0;6397:18:11;;;6390:34;2555:11:0;;1712:64;2654:43;;6260:18:11;;2721:67:0;;;-1:-1:-1;;2721:67:0;;;;;;;;;;2608:199;;;2721:67;2608:199;;:::i;:::-;;;;-1:-1:-1;;2608:199:0;;;;;;;;;;2572:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2517:367:0;2894:7;:14;;-1:-1:-1;;2894:14:0;;;;;2473:443::o;-1:-1:-1:-;;;;;;;;:::o;1488:290:11:-;1558:6;1611:2;1599:9;1590:7;1586:23;1582:32;1579:52;;;1627:1;1624;1617:12;1579:52;1653:16;;-1:-1:-1;;;;;1698:31:11;;1688:42;;1678:70;;1744:1;1741;1734:12;1678:70;1767:5;1488:290;-1:-1:-1;;;1488:290:11:o;2062:250::-;2147:1;2157:113;2171:6;2168:1;2165:13;2157:113;;;2247:11;;;2241:18;2228:11;;;2221:39;2193:2;2186:10;2157:113;;;-1:-1:-1;;2304:1:11;2286:16;;2279:27;2062:250::o;2317:384::-;-1:-1:-1;;;;;;2502:33:11;;2490:46;;2559:13;;2472:3;;2581:74;2559:13;2644:1;2635:11;;2628:4;2616:17;;2581:74;:::i;:::-;2675:16;;;;2693:1;2671:24;;2317:384;-1:-1:-1;;;2317:384:11:o;2706:287::-;2835:3;2873:6;2867:13;2889:66;2948:6;2943:3;2936:4;2928:6;2924:17;2889:66;:::i;:::-;2971:16;;;;;2706:287;-1:-1:-1;;2706:287:11:o;2998:277::-;3065:6;3118:2;3106:9;3097:7;3093:23;3089:32;3086:52;;;3134:1;3131;3124:12;3086:52;3166:9;3160:16;3219:5;3212:13;3205:21;3198:5;3195:32;3185:60;;3241:1;3238;3231:12;3280:184;3350:6;3403:2;3391:9;3382:7;3378:23;3374:32;3371:52;;;3419:1;3416;3409:12;3371:52;-1:-1:-1;3442:16:11;;3280:184;-1:-1:-1;3280:184:11:o;3849:271::-;3891:3;3929:5;3923:12;3956:6;3951:3;3944:19;3972:76;4041:6;4034:4;4029:3;4025:14;4018:4;4011:5;4007:16;3972:76;:::i;:::-;4102:2;4081:15;-1:-1:-1;;4077:29:11;4068:39;;;;4109:4;4064:50;;3849:271;-1:-1:-1;;3849:271:11:o;4125:446::-;4375:2;4364:9;4357:21;4414:1;4409:2;4398:9;4394:18;4387:29;-1:-1:-1;;;4447:2:11;4436:9;4432:18;4425:35;4498:3;4491:4;4480:9;4476:20;4469:33;4338:4;4519:46;4560:3;4549:9;4545:19;4537:6;4519:46;:::i;4576:220::-;4725:2;4714:9;4707:21;4688:4;4745:45;4786:2;4775:9;4771:18;4763:6;4745:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "godModeAddress()": "3b130995",
    "owner()": "8da5cb5b",
    "setUp()": "0a9254e4",
    "testSetGodModeAddress()": "175b498f",
    "testTransferWithGodMode()": "eed43c3c",
    "token()": "fc0c546a",
    "user1()": "ac1717b0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"godModeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSetGodModeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTransferWithGodMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract GodModeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"user1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/GodModeTokenTest.t.sol\":\"GodModeTokenTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4840d08b1bee201f19eb0647ccaf30e94f35b1ad849982238396a68097154ab7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f2c7af5340aad9dbd65d3da556ee23479a960fbc777d61f512e6667e11c3d454\",\"dweb:/ipfs/QmTfdF6diDDiMEthu2fkYoj4tHZ8SmwLKCshf9AZSzMTkE\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x0d638689269b9f45fd55df13431e59cbd8ff6ed96440de9d97f0ab8038563e9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdfb3e5b2a436e40f6ed3804e0c6f108413ea144139db23639d3915aa5f6d5d\",\"dweb:/ipfs/QmTzQm8QGixaYZWWPrxQQQwgYyiH4HXKeXgbV1e5XJ8FJx\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xd9040a08bdab2d17928b33d1abfa382f558549deb54b3211ac1a6b1f44e9f6b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32ce0c036fbc5a69a83fcbb59628f42393ba8c797eb7f21a41d767d9e4fac50a\",\"dweb:/ipfs/QmRypRqATvntowcHTyG1boWBE3YeNPQwQDHR9Yj2BHwBEi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xf1fcb638e66b88ece2e8b42045801c4177dbe495d2dc0b9eebac015d5df53bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167737d63e0479e713b9471bcf7aaa8cad40e346a9151a4e507c2f34a80752b0\",\"dweb:/ipfs/QmVyfaL1snQhGbZkH5UFdG2beQYWz84T7eGSofgMkBjrzU\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x164109860c865362e434257fe105fb20d784f24c178366fce0c6d1466abd009b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8bffbb3f7b9bdbcf521d25cc47ca56df1d0d563c957d8cb9088ddb9829d37d8\",\"dweb:/ipfs/QmXLiY5EzQ9i8Ex8jzegzVz9h3UhYHRuQkB77kcxkvxU7e\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xb01442d8644513342deb582807f9092a75ce08487ea2d6161ef8f5f2f285b526\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91d13345b1e7125f6b0deb39fa067b1a8e80bcb84548d525d47d5b36664a6887\",\"dweb:/ipfs/QmRqAdtJyCQBjHfb339xWQXij6yjjz7XKu9b8G8irsXzWc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x1bdf69292ffadfe4fcba7e10e5550f438f7f1fde63310f5bb83edd9d3b0f69e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae1d053279ec2865200a6333b97426f4f781f0fca56dcb7d660c3eb99ae0b789\",\"dweb:/ipfs/QmTUBwywBhaqzAuXVjWm69UwwRsu1rfTh5GocqBZJ1bDCu\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x8a153984d81fae33515b45d725e790ed4a9f0b5ca708c66cd70a8317fde8110a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30eae296aa24a8e1dbac380465d16cdf07177fa0cee1a7221c3c91667b1e408b\",\"dweb:/ipfs/QmVZTGGGj8E5YqQAFinc5nF9sYbYsw6x8gnM3KbDyt4zNC\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xb166bb70c315866c3a99b74ed976249a84c780aaa5f2d3704b0f20120f975d1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd2dde01cb77478522a38d01ced8a51db5ede42eb539f595ffaab92c887a92dd\",\"dweb:/ipfs/QmWiyoP3mgTbcmovmiA2U3aNDm1dr1hh1i57c4PhpmSqiX\"]},\"src/GodModeToken.sol\":{\"keccak256\":\"0x4e32dad060747426e6dc0d2736602b4b6d5015c5282639125253528b2f9ce55a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11b84cf47056a05b94aa54ac1a5f4d639851d59803a5f361cc7200214974ee13\",\"dweb:/ipfs/QmQqVPfimTL8hzChZnCRNGyPxfBibTYLZig4AcaRNLc6Sc\"]},\"test/GodModeTokenTest.t.sol\":{\"keccak256\":\"0xebda02427809b4caa9e9aa0f8915d8885ba1cb237e8178a42317d9942e262919\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf30291e345e6349099ef24b7fe131615b5f1d1ba2fb55c344ec10a64827e153\",\"dweb:/ipfs/QmacYxN7mnnhCSEzhZqkhy2VngEKKLX77UgWApqMLDnMBz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "godModeAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSetGodModeAddress"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTransferWithGodMode"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract GodModeToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "user1",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/GodModeTokenTest.t.sol": "GodModeTokenTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4840d08b1bee201f19eb0647ccaf30e94f35b1ad849982238396a68097154ab7",
        "urls": [
          "bzz-raw://f2c7af5340aad9dbd65d3da556ee23479a960fbc777d61f512e6667e11c3d454",
          "dweb:/ipfs/QmTfdF6diDDiMEthu2fkYoj4tHZ8SmwLKCshf9AZSzMTkE"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0x0d638689269b9f45fd55df13431e59cbd8ff6ed96440de9d97f0ab8038563e9d",
        "urls": [
          "bzz-raw://afdfb3e5b2a436e40f6ed3804e0c6f108413ea144139db23639d3915aa5f6d5d",
          "dweb:/ipfs/QmTzQm8QGixaYZWWPrxQQQwgYyiH4HXKeXgbV1e5XJ8FJx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0xd9040a08bdab2d17928b33d1abfa382f558549deb54b3211ac1a6b1f44e9f6b5",
        "urls": [
          "bzz-raw://32ce0c036fbc5a69a83fcbb59628f42393ba8c797eb7f21a41d767d9e4fac50a",
          "dweb:/ipfs/QmRypRqATvntowcHTyG1boWBE3YeNPQwQDHR9Yj2BHwBEi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0xf1fcb638e66b88ece2e8b42045801c4177dbe495d2dc0b9eebac015d5df53bf1",
        "urls": [
          "bzz-raw://167737d63e0479e713b9471bcf7aaa8cad40e346a9151a4e507c2f34a80752b0",
          "dweb:/ipfs/QmVyfaL1snQhGbZkH5UFdG2beQYWz84T7eGSofgMkBjrzU"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x164109860c865362e434257fe105fb20d784f24c178366fce0c6d1466abd009b",
        "urls": [
          "bzz-raw://a8bffbb3f7b9bdbcf521d25cc47ca56df1d0d563c957d8cb9088ddb9829d37d8",
          "dweb:/ipfs/QmXLiY5EzQ9i8Ex8jzegzVz9h3UhYHRuQkB77kcxkvxU7e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xb01442d8644513342deb582807f9092a75ce08487ea2d6161ef8f5f2f285b526",
        "urls": [
          "bzz-raw://91d13345b1e7125f6b0deb39fa067b1a8e80bcb84548d525d47d5b36664a6887",
          "dweb:/ipfs/QmRqAdtJyCQBjHfb339xWQXij6yjjz7XKu9b8G8irsXzWc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x1bdf69292ffadfe4fcba7e10e5550f438f7f1fde63310f5bb83edd9d3b0f69e6",
        "urls": [
          "bzz-raw://ae1d053279ec2865200a6333b97426f4f781f0fca56dcb7d660c3eb99ae0b789",
          "dweb:/ipfs/QmTUBwywBhaqzAuXVjWm69UwwRsu1rfTh5GocqBZJ1bDCu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x8a153984d81fae33515b45d725e790ed4a9f0b5ca708c66cd70a8317fde8110a",
        "urls": [
          "bzz-raw://30eae296aa24a8e1dbac380465d16cdf07177fa0cee1a7221c3c91667b1e408b",
          "dweb:/ipfs/QmVZTGGGj8E5YqQAFinc5nF9sYbYsw6x8gnM3KbDyt4zNC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xb166bb70c315866c3a99b74ed976249a84c780aaa5f2d3704b0f20120f975d1d",
        "urls": [
          "bzz-raw://cd2dde01cb77478522a38d01ced8a51db5ede42eb539f595ffaab92c887a92dd",
          "dweb:/ipfs/QmWiyoP3mgTbcmovmiA2U3aNDm1dr1hh1i57c4PhpmSqiX"
        ],
        "license": "MIT"
      },
      "src/GodModeToken.sol": {
        "keccak256": "0x4e32dad060747426e6dc0d2736602b4b6d5015c5282639125253528b2f9ce55a",
        "urls": [
          "bzz-raw://11b84cf47056a05b94aa54ac1a5f4d639851d59803a5f361cc7200214974ee13",
          "dweb:/ipfs/QmQqVPfimTL8hzChZnCRNGyPxfBibTYLZig4AcaRNLc6Sc"
        ],
        "license": "MIT"
      },
      "test/GodModeTokenTest.t.sol": {
        "keccak256": "0xebda02427809b4caa9e9aa0f8915d8885ba1cb237e8178a42317d9942e262919",
        "urls": [
          "bzz-raw://cf30291e345e6349099ef24b7fe131615b5f1d1ba2fb55c344ec10a64827e153",
          "dweb:/ipfs/QmacYxN7mnnhCSEzhZqkhy2VngEKKLX77UgWApqMLDnMBz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/GodModeTokenTest.t.sol",
    "id": 3919,
    "exportedSymbols": {
      "DSTest": [
        2331
      ],
      "GodModeToken": [
        3776
      ],
      "GodModeTokenTest": [
        3918
      ],
      "IERC20": [
        3363
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1891:10",
    "nodes": [
      {
        "id": 3778,
        "nodeType": "PragmaDirective",
        "src": "33:23:10",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 3780,
        "nodeType": "ImportDirective",
        "src": "60:65:10",
        "nodes": [],
        "absolutePath": "lib/forge-std/lib/ds-test/src/test.sol",
        "file": "../lib/forge-std/lib/ds-test/src/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3919,
        "sourceUnit": 2332,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3779,
              "name": "DSTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2331,
              "src": "68:6:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3781,
        "nodeType": "ImportDirective",
        "src": "127:56:10",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3919,
        "sourceUnit": 3364,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3783,
        "nodeType": "ImportDirective",
        "src": "185:53:10",
        "nodes": [],
        "absolutePath": "src/GodModeToken.sol",
        "file": "../src/GodModeToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3919,
        "sourceUnit": 3777,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3782,
              "name": "GodModeToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3776,
              "src": "193:12:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3918,
        "nodeType": "ContractDefinition",
        "src": "242:1680:10",
        "nodes": [
          {
            "id": 3788,
            "nodeType": "VariableDeclaration",
            "src": "285:25:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "fc0c546a",
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "305:5:10",
            "scope": 3918,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GodModeToken_$3776",
              "typeString": "contract GodModeToken"
            },
            "typeName": {
              "id": 3787,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3786,
                "name": "GodModeToken",
                "nameLocations": [
                  "285:12:10"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3776,
                "src": "285:12:10"
              },
              "referencedDeclaration": 3776,
              "src": "285:12:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GodModeToken_$3776",
                "typeString": "contract GodModeToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3790,
            "nodeType": "VariableDeclaration",
            "src": "317:20:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "8da5cb5b",
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "332:5:10",
            "scope": 3918,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3789,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "317:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3792,
            "nodeType": "VariableDeclaration",
            "src": "344:29:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "3b130995",
            "mutability": "mutable",
            "name": "godModeAddress",
            "nameLocation": "359:14:10",
            "scope": 3918,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3791,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "344:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3794,
            "nodeType": "VariableDeclaration",
            "src": "380:20:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "ac1717b0",
            "mutability": "mutable",
            "name": "user1",
            "nameLocation": "395:5:10",
            "scope": 3918,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3793,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "380:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3831,
            "nodeType": "FunctionDefinition",
            "src": "409:399:10",
            "nodes": [],
            "body": {
              "id": 3830,
              "nodeType": "Block",
              "src": "433:375:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3797,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3790,
                      "src": "444:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3800,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "460:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GodModeTokenTest_$3918",
                            "typeString": "contract GodModeTokenTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_GodModeTokenTest_$3918",
                            "typeString": "contract GodModeTokenTest"
                          }
                        ],
                        "id": 3799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "452:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3798,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "452:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "452:13:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "444:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3803,
                  "nodeType": "ExpressionStatement",
                  "src": "444:21:10"
                },
                {
                  "expression": {
                    "id": 3809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3804,
                      "name": "godModeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3792,
                      "src": "538:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3078313233",
                          "id": 3807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "563:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_291_by_1",
                            "typeString": "int_const 291"
                          },
                          "value": "0x123"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_291_by_1",
                            "typeString": "int_const 291"
                          }
                        ],
                        "id": 3806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "555:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3805,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "555:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "555:14:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "538:31:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3810,
                  "nodeType": "ExpressionStatement",
                  "src": "538:31:10"
                },
                {
                  "expression": {
                    "id": 3816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3811,
                      "name": "user1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3794,
                      "src": "638:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3078343536",
                          "id": 3814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "654:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1110_by_1",
                            "typeString": "int_const 1110"
                          },
                          "value": "0x456"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1110_by_1",
                            "typeString": "int_const 1110"
                          }
                        ],
                        "id": 3813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "646:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3812,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "646:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "646:14:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "638:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3817,
                  "nodeType": "ExpressionStatement",
                  "src": "638:22:10"
                },
                {
                  "expression": {
                    "id": 3828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3818,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3788,
                      "src": "729:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GodModeToken_$3776",
                        "typeString": "contract GodModeToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4d79546f6b656e",
                          "id": 3822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "754:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
                            "typeString": "literal_string \"MyToken\""
                          },
                          "value": "MyToken"
                        },
                        {
                          "hexValue": "4d544b",
                          "id": 3823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "765:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
                            "typeString": "literal_string \"MTK\""
                          },
                          "value": "MTK"
                        },
                        {
                          "hexValue": "31303030",
                          "id": 3824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "772:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        {
                          "id": 3825,
                          "name": "godModeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3792,
                          "src": "778:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3826,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3790,
                          "src": "794:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
                            "typeString": "literal_string \"MyToken\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
                            "typeString": "literal_string \"MTK\""
                          },
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "737:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_address_$returns$_t_contract$_GodModeToken_$3776_$",
                          "typeString": "function (string memory,string memory,uint256,address,address) returns (contract GodModeToken)"
                        },
                        "typeName": {
                          "id": 3820,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3819,
                            "name": "GodModeToken",
                            "nameLocations": [
                              "741:12:10"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3776,
                            "src": "741:12:10"
                          },
                          "referencedDeclaration": 3776,
                          "src": "741:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GodModeToken_$3776",
                            "typeString": "contract GodModeToken"
                          }
                        }
                      },
                      "id": 3827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "737:63:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GodModeToken_$3776",
                        "typeString": "contract GodModeToken"
                      }
                    },
                    "src": "729:71:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GodModeToken_$3776",
                      "typeString": "contract GodModeToken"
                    }
                  },
                  "id": 3829,
                  "nodeType": "ExpressionStatement",
                  "src": "729:71:10"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "418:5:10",
            "parameters": {
              "id": 3795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "423:2:10"
            },
            "returnParameters": {
              "id": 3796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "433:0:10"
            },
            "scope": 3918,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3892,
            "nodeType": "FunctionDefinition",
            "src": "816:782:10",
            "nodes": [],
            "body": {
              "id": 3891,
              "nodeType": "Block",
              "src": "858:740:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3837,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3790,
                            "src": "929:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3835,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3788,
                            "src": "913:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GodModeToken_$3776",
                              "typeString": "contract GodModeToken"
                            }
                          },
                          "id": 3836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "919:9:10",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2797,
                          "src": "913:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 3838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "913:22:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 3839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "937:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      {
                        "hexValue": "496e636f727265637420696e697469616c2062616c616e636520666f72206f776e6572",
                        "id": 3840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "943:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b07356dc508eec50e9b74cb4319de3586b42d9ffa3c20a873ce5fab8f0aabf79",
                          "typeString": "literal_string \"Incorrect initial balance for owner\""
                        },
                        "value": "Incorrect initial balance for owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b07356dc508eec50e9b74cb4319de3586b42d9ffa3c20a873ce5fab8f0aabf79",
                          "typeString": "literal_string \"Incorrect initial balance for owner\""
                        }
                      ],
                      "id": 3834,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        321,
                        338,
                        385,
                        410,
                        440,
                        465,
                        524,
                        549,
                        579,
                        2052,
                        2087
                      ],
                      "referencedDeclaration": 321,
                      "src": "904:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 3841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "904:77:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3842,
                  "nodeType": "ExpressionStatement",
                  "src": "904:77:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3846,
                            "name": "godModeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3792,
                            "src": "1017:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3844,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3788,
                            "src": "1001:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GodModeToken_$3776",
                              "typeString": "contract GodModeToken"
                            }
                          },
                          "id": 3845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1007:9:10",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2797,
                          "src": "1001:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 3847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1001:31:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 3848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1034:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "496e636f727265637420696e697469616c2062616c616e636520666f7220676f644d6f646541646472657373",
                        "id": 3849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1037:46:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ed89e782e8192032cfc3849915c889c95f3d4103f968af6640ff6e65a61b3ca",
                          "typeString": "literal_string \"Incorrect initial balance for godModeAddress\""
                        },
                        "value": "Incorrect initial balance for godModeAddress"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ed89e782e8192032cfc3849915c889c95f3d4103f968af6640ff6e65a61b3ca",
                          "typeString": "literal_string \"Incorrect initial balance for godModeAddress\""
                        }
                      ],
                      "id": 3843,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        321,
                        338,
                        385,
                        410,
                        440,
                        465,
                        524,
                        549,
                        579,
                        2052,
                        2087
                      ],
                      "referencedDeclaration": 321,
                      "src": "992:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 3850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "992:92:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3851,
                  "nodeType": "ExpressionStatement",
                  "src": "992:92:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3855,
                            "name": "user1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3794,
                            "src": "1120:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3853,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3788,
                            "src": "1104:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GodModeToken_$3776",
                              "typeString": "contract GodModeToken"
                            }
                          },
                          "id": 3854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1110:9:10",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2797,
                          "src": "1104:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 3856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1104:22:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 3857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1128:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "496e636f727265637420696e697469616c2062616c616e636520666f72207573657231",
                        "id": 3858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1131:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d9e28ddec7bbebf8ec95915c7ff13bb8b9ed3d5247d402893293e84eef2099b",
                          "typeString": "literal_string \"Incorrect initial balance for user1\""
                        },
                        "value": "Incorrect initial balance for user1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d9e28ddec7bbebf8ec95915c7ff13bb8b9ed3d5247d402893293e84eef2099b",
                          "typeString": "literal_string \"Incorrect initial balance for user1\""
                        }
                      ],
                      "id": 3852,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        321,
                        338,
                        385,
                        410,
                        440,
                        465,
                        524,
                        549,
                        579,
                        2052,
                        2087
                      ],
                      "referencedDeclaration": 321,
                      "src": "1095:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 3859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1095:74:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3860,
                  "nodeType": "ExpressionStatement",
                  "src": "1095:74:10"
                },
                {
                  "assignments": [
                    3862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3862,
                      "mutability": "mutable",
                      "name": "transferAmount",
                      "nameLocation": "1235:14:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 3891,
                      "src": "1227:22:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3861,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1227:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3864,
                  "initialValue": {
                    "hexValue": "313030",
                    "id": 3863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1252:3:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    },
                    "value": "100"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1227:28:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3868,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3790,
                        "src": "1292:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3869,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3794,
                        "src": "1299:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3870,
                        "name": "transferAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3862,
                        "src": "1306:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3865,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3788,
                        "src": "1266:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GodModeToken_$3776",
                          "typeString": "contract GodModeToken"
                        }
                      },
                      "id": 3867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1272:19:10",
                      "memberName": "transferWithGodMode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3763,
                      "src": "1266:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 3871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1266:55:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3872,
                  "nodeType": "ExpressionStatement",
                  "src": "1266:55:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3876,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3790,
                            "src": "1427:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3874,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3788,
                            "src": "1411:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GodModeToken_$3776",
                              "typeString": "contract GodModeToken"
                            }
                          },
                          "id": 3875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1417:9:10",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2797,
                          "src": "1411:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 3877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1411:22:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "393030",
                        "id": 3878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1435:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_900_by_1",
                          "typeString": "int_const 900"
                        },
                        "value": "900"
                      },
                      {
                        "hexValue": "496e636f72726563742062616c616e636520666f72206f776e6572206166746572207472616e73666572",
                        "id": 3879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1440:44:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c984b2061b52d4faa5251ec52932a009072ff125f95acedc1e9b6df5fe8991e1",
                          "typeString": "literal_string \"Incorrect balance for owner after transfer\""
                        },
                        "value": "Incorrect balance for owner after transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_900_by_1",
                          "typeString": "int_const 900"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c984b2061b52d4faa5251ec52932a009072ff125f95acedc1e9b6df5fe8991e1",
                          "typeString": "literal_string \"Incorrect balance for owner after transfer\""
                        }
                      ],
                      "id": 3873,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        321,
                        338,
                        385,
                        410,
                        440,
                        465,
                        524,
                        549,
                        579,
                        2052,
                        2087
                      ],
                      "referencedDeclaration": 321,
                      "src": "1402:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 3880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1402:83:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3881,
                  "nodeType": "ExpressionStatement",
                  "src": "1402:83:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3885,
                            "name": "user1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3794,
                            "src": "1521:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3883,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3788,
                            "src": "1505:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GodModeToken_$3776",
                              "typeString": "contract GodModeToken"
                            }
                          },
                          "id": 3884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1511:9:10",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2797,
                          "src": "1505:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 3886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1505:22:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3887,
                        "name": "transferAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3862,
                        "src": "1529:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f72726563742062616c616e636520666f72207573657231206166746572207472616e73666572",
                        "id": 3888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1545:44:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86c8a00a9317cfd472e5cf36ac650c2a4a28d183115c62fff5561b0e4eccc3a4",
                          "typeString": "literal_string \"Incorrect balance for user1 after transfer\""
                        },
                        "value": "Incorrect balance for user1 after transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86c8a00a9317cfd472e5cf36ac650c2a4a28d183115c62fff5561b0e4eccc3a4",
                          "typeString": "literal_string \"Incorrect balance for user1 after transfer\""
                        }
                      ],
                      "id": 3882,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        321,
                        338,
                        385,
                        410,
                        440,
                        465,
                        524,
                        549,
                        579,
                        2052,
                        2087
                      ],
                      "referencedDeclaration": 321,
                      "src": "1496:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 3889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1496:94:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3890,
                  "nodeType": "ExpressionStatement",
                  "src": "1496:94:10"
                }
              ]
            },
            "functionSelector": "eed43c3c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransferWithGodMode",
            "nameLocation": "825:23:10",
            "parameters": {
              "id": 3832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "848:2:10"
            },
            "returnParameters": {
              "id": 3833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:0:10"
            },
            "scope": 3918,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3917,
            "nodeType": "FunctionDefinition",
            "src": "1606:313:10",
            "nodes": [],
            "body": {
              "id": 3916,
              "nodeType": "Block",
              "src": "1646:273:10",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3896,
                      "mutability": "mutable",
                      "name": "newGodModeAddress",
                      "nameLocation": "1724:17:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 3916,
                      "src": "1716:25:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3895,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1716:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3901,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "3078373839",
                        "id": 3899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1752:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1929_by_1",
                          "typeString": "int_const 1929"
                        },
                        "value": "0x789"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1929_by_1",
                          "typeString": "int_const 1929"
                        }
                      ],
                      "id": 3898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1744:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3897,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1744:7:10",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1744:14:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1716:42:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3905,
                        "name": "newGodModeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3896,
                        "src": "1793:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3902,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3788,
                        "src": "1769:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GodModeToken_$3776",
                          "typeString": "contract GodModeToken"
                        }
                      },
                      "id": 3904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1775:17:10",
                      "memberName": "setGodModeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3775,
                      "src": "1769:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1769:42:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3907,
                  "nodeType": "ExpressionStatement",
                  "src": "1769:42:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 3909,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3788,
                            "src": "1831:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GodModeToken_$3776",
                              "typeString": "contract GodModeToken"
                            }
                          },
                          "id": 3910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1837:14:10",
                          "memberName": "godModeAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3679,
                          "src": "1831:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 3911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1831:22:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3912,
                        "name": "newGodModeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3896,
                        "src": "1855:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "476f64204d6f646520616464726573732073686f756c642062652075706461746564",
                        "id": 3913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1874:36:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2abe7165a4d3d9c56fe8f0cacae964d04958b80d53dcc98dc5a769047303ee11",
                          "typeString": "literal_string \"God Mode address should be updated\""
                        },
                        "value": "God Mode address should be updated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2abe7165a4d3d9c56fe8f0cacae964d04958b80d53dcc98dc5a769047303ee11",
                          "typeString": "literal_string \"God Mode address should be updated\""
                        }
                      ],
                      "id": 3908,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        321,
                        338,
                        385,
                        410,
                        440,
                        465,
                        524,
                        549,
                        579,
                        2052,
                        2087
                      ],
                      "referencedDeclaration": 410,
                      "src": "1822:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 3914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1822:89:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3915,
                  "nodeType": "ExpressionStatement",
                  "src": "1822:89:10"
                }
              ]
            },
            "functionSelector": "175b498f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSetGodModeAddress",
            "nameLocation": "1615:21:10",
            "parameters": {
              "id": 3893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1636:2:10"
            },
            "returnParameters": {
              "id": 3894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1646:0:10"
            },
            "scope": 3918,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3784,
              "name": "DSTest",
              "nameLocations": [
                "271:6:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2331,
              "src": "271:6:10"
            },
            "id": 3785,
            "nodeType": "InheritanceSpecifier",
            "src": "271:6:10"
          }
        ],
        "canonicalName": "GodModeTokenTest",
        "contractDependencies": [
          3776
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3918,
          2331
        ],
        "name": "GodModeTokenTest",
        "nameLocation": "251:16:10",
        "scope": 3919,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 10
}