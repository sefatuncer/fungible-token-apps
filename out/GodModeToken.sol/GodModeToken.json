{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_godModeAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "currentAllowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requestedDecrease",
          "type": "uint256"
        }
      ],
      "name": "ERC20FailedDecreaseAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "explanation",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sendWithGodMode",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "requestedDecrease",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "godModeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newGodModeAddress",
          "type": "address"
        }
      ],
      "name": "setGodModeAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferWithGodMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620010d7380380620010d7833981016040819052620000349162000367565b80858560036200004583826200048f565b5060046200005482826200048f565b5050506200006881620000a060201b60201c565b50620000753384620000be565b50600780546001600160a01b0319166001600160a01b03929092169190911790555062000583915050565b600680546001600160a01b0319169055620000bb8162000100565b50565b6001600160a01b038216620000ee5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620000fc6000838362000152565b5050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038316620001815780600260008282546200017591906200055b565b90915550620001f59050565b6001600160a01b03831660009081526020819052604090205481811015620001d65760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000e5565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620002135760028054829003905562000232565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200027891815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002ad57600080fd5b81516001600160401b0380821115620002ca57620002ca62000285565b604051601f8301601f19908116603f01168101908282118183101715620002f557620002f562000285565b816040528381526020925086838588010111156200031257600080fd5b600091505b8382101562000336578582018301518183018401529082019062000317565b600093810190920192909252949350505050565b80516001600160a01b03811681146200036257600080fd5b919050565b600080600080600060a086880312156200038057600080fd5b85516001600160401b03808211156200039857600080fd5b620003a689838a016200029b565b96506020880151915080821115620003bd57600080fd5b50620003cc888289016200029b565b94505060408601519250620003e4606087016200034a565b9150620003f4608087016200034a565b90509295509295909350565b600181811c908216806200041557607f821691505b6020821081036200043657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200048a57600081815260208120601f850160051c81016020861015620004655750805b601f850160051c820191505b81811015620004865782815560010162000471565b5050505b505050565b81516001600160401b03811115620004ab57620004ab62000285565b620004c381620004bc845462000400565b846200043c565b602080601f831160018114620004fb5760008415620004e25750858301515b600019600386901b1c1916600185901b17855562000486565b600085815260208120601f198616915b828110156200052c578886015182559484019460019091019084016200050b565b50858210156200054b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200057d57634e487b7160e01b600052601160045260246000fd5b92915050565b610b4480620005936000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a457c2d711610071578063a457c2d714610253578063a9059cbb14610266578063dd62ed3e14610279578063e30c39781461028c578063f2fde38b1461029d57600080fd5b8063715018a61461021757806379ba50971461021f57806383d5b7a6146102275780638da5cb5b1461023a57806395d89b411461024b57600080fd5b806327f9124e116100f457806327f9124e1461018c578063313ce567146101a157806339509351146101b05780633b130995146101c357806370a08231146101ee57600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e6102b0565b60405161013b919061098e565b60405180910390f35b6101576101523660046109f8565b610342565b604051901515815260200161013b565b6002545b60405190815260200161013b565b610157610187366004610a22565b61035c565b61019f61019a366004610a22565b610380565b005b6040516012815260200161013b565b6101576101be3660046109f8565b61046c565b6007546101d6906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61016b6101fc366004610a5e565b6001600160a01b031660009081526020819052604090205490565b61019f61048e565b61019f6104a2565b61019f610235366004610a5e565b6104e6565b6005546001600160a01b03166101d6565b61012e610510565b6101576102613660046109f8565b61051f565b6101576102743660046109f8565b610576565b61016b610287366004610a80565b610584565b6006546001600160a01b03166101d6565b61019f6102ab366004610a5e565b6105af565b6060600380546102bf90610ab3565b80601f01602080910402602001604051908101604052809291908181526020018280546102eb90610ab3565b80156103385780601f1061030d57610100808354040283529160200191610338565b820191906000526020600020905b81548152906001019060200180831161031b57829003601f168201915b5050505050905090565b600033610350818585610620565b60019150505b92915050565b60003361036a858285610632565b610375858585610698565b506001949350505050565b6007546001600160a01b031633146103f45760405162461bcd60e51b815260206004820152602c60248201527f4f6e6c7920676f64206d6f646520616464726573732063616e2063616c6c207460448201526b3434b990333ab731ba34b7b760a11b60648201526084015b60405180910390fd5b6103ff838383610698565b604080517453656e64696e67207769746820476f64206d6f646560581b81526001600160a01b0385811660208301528416818301526060810183905290517f0e6860d111f5607fabc9a76b988c40552d13cc0cbd4e567186f314e065d705329181900360800190a1505050565b60003361035081858561047f8383610584565b6104899190610aed565b610620565b6104966106f7565b6104a06000610724565b565b60065433906001600160a01b031681146104da5760405163118cdaa760e01b81526001600160a01b03821660048201526024016103eb565b6104e381610724565b50565b6104ee6106f7565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6060600480546102bf90610ab3565b6000338161052d8286610584565b90508381101561056957604051632983c0c360e21b81526001600160a01b038616600482015260248101829052604481018590526064016103eb565b6103758286868403610620565b600033610350818585610698565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105b76106f7565b600680546001600160a01b0383166001600160a01b031990911681179091556105e86005546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b61062d838383600161073d565b505050565b600061063e8484610584565b90506000198114610692578181101561068357604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103eb565b6106928484848403600061073d565b50505050565b6001600160a01b0383166106c257604051634b637e8f60e11b8152600060048201526024016103eb565b6001600160a01b0382166106ec5760405163ec442f0560e01b8152600060048201526024016103eb565b61062d838383610812565b6005546001600160a01b031633146104a05760405163118cdaa760e01b81523360048201526024016103eb565b600680546001600160a01b03191690556104e38161093c565b6001600160a01b0384166107675760405163e602df0560e01b8152600060048201526024016103eb565b6001600160a01b03831661079157604051634a1406b160e11b8152600060048201526024016103eb565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561069257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161080491815260200190565b60405180910390a350505050565b6001600160a01b03831661083d5780600260008282546108329190610aed565b909155506108af9050565b6001600160a01b038316600090815260208190526040902054818110156108905760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103eb565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166108cb576002805482900390556108ea565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161092f91815260200190565b60405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b818110156109bb5785810183015185820160400152820161099f565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109f357600080fd5b919050565b60008060408385031215610a0b57600080fd5b610a14836109dc565b946020939093013593505050565b600080600060608486031215610a3757600080fd5b610a40846109dc565b9250610a4e602085016109dc565b9150604084013590509250925092565b600060208284031215610a7057600080fd5b610a79826109dc565b9392505050565b60008060408385031215610a9357600080fd5b610a9c836109dc565b9150610aaa602084016109dc565b90509250929050565b600181811c90821680610ac757607f821691505b602082108103610ae757634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561035657634e487b7160e01b600052601160045260246000fdfea26469706673582212209590b5269d5ed1432e20d0ab91e3268600445fd7c886efeb2bd09afac374157764736f6c63430008150033",
    "sourceMap": "367:1426:12:-:0;;;729:356;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;941:12;917:5;924:7;2399:5:5;:13;917:5:12;2399::5;:13;:::i;:::-;-1:-1:-1;2423:7:5;:17;2433:7;2423;:17;:::i;:::-;;2332:116;;1307:32:1;1326:12;1307:18;;;:32;;:::i;:::-;-1:-1:-1;966:32:12::2;972:10;984:13:::0;966:5:::2;:32::i;:::-;-1:-1:-1::0;1009:14:12::2;:32:::0;;-1:-1:-1;;;;;;1009:32:12::2;-1:-1:-1::0;;;;;1009:32:12;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;367:1426:12;;-1:-1:-1;;367:1426:12;1571:156:2;1661:13;1654:20;;-1:-1:-1;;;;;;1654:20:2;;;1685:34;1710:8;1685:24;:34::i;:::-;1571:156;:::o;10164:213:5:-;-1:-1:-1;;;;;10235:21:5;;10231:93;;10280:32;;-1:-1:-1;;;10280:32:5;;10309:1;10280:32;;;4708:51:19;4681:18;;10280:32:5;;;;;;;;10231:93;10334:35;10350:1;10354:7;10363:5;10334:7;:35::i;:::-;10164:213;;:::o;2899:191:1:-;2992:6;;;-1:-1:-1;;;;;3009:17:1;;;-1:-1:-1;;;;;;3009:17:1;;;;;;;3042:40;;2992:6;;;3009:17;2992:6;;3042:40;;2973:16;;3042:40;2962:128;2899:191;:::o;8676:1135:5:-;-1:-1:-1;;;;;8766:18:5;;8762:552;;8920:5;8904:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;8762:552:5;;-1:-1:-1;8762:552:5;;-1:-1:-1;;;;;8980:15:5;;8958:19;8980:15;;;;;;;;;;;9014:19;;;9010:117;;;9061:50;;-1:-1:-1;;;9061:50:5;;-1:-1:-1;;;;;5217:32:19;;9061:50:5;;;5199:51:19;5266:18;;;5259:34;;;5309:18;;;5302:34;;;5172:18;;9061:50:5;4997:345:19;9010:117:5;-1:-1:-1;;;;;9250:15:5;;:9;:15;;;;;;;;;;9268:19;;;;9250:37;;8762:552;-1:-1:-1;;;;;9330:16:5;;9326:435;;9496:12;:21;;;;;;;9326:435;;;-1:-1:-1;;;;;9712:13:5;;:9;:13;;;;;;;;;;:22;;;;;;9326:435;9793:2;-1:-1:-1;;;;;9778:25:5;9787:4;-1:-1:-1;;;;;9778:25:5;;9797:5;9778:25;;;;5493::19;;5481:2;5466:18;;5347:177;9778:25:5;;;;;;;;8676:1135;;;:::o;14:127:19:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:19;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:19;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:19:o;991:177::-;1070:13;;-1:-1:-1;;;;;1112:31:19;;1102:42;;1092:70;;1158:1;1155;1148:12;1092:70;991:177;;;:::o;1173:795::-;1299:6;1307;1315;1323;1331;1384:3;1372:9;1363:7;1359:23;1355:33;1352:53;;;1401:1;1398;1391:12;1352:53;1428:16;;-1:-1:-1;;;;;1493:14:19;;;1490:34;;;1520:1;1517;1510:12;1490:34;1543:61;1596:7;1587:6;1576:9;1572:22;1543:61;:::i;:::-;1533:71;;1650:2;1639:9;1635:18;1629:25;1613:41;;1679:2;1669:8;1666:16;1663:36;;;1695:1;1692;1685:12;1663:36;;1718:63;1773:7;1762:8;1751:9;1747:24;1718:63;:::i;:::-;1708:73;;;1821:2;1810:9;1806:18;1800:25;1790:35;;1844:49;1889:2;1878:9;1874:18;1844:49;:::i;:::-;1834:59;;1912:50;1957:3;1946:9;1942:19;1912:50;:::i;:::-;1902:60;;1173:795;;;;;;;;:::o;1973:380::-;2052:1;2048:12;;;;2095;;;2116:61;;2170:4;2162:6;2158:17;2148:27;;2116:61;2223:2;2215:6;2212:14;2192:18;2189:38;2186:161;;2269:10;2264:3;2260:20;2257:1;2250:31;2304:4;2301:1;2294:15;2332:4;2329:1;2322:15;2186:161;;1973:380;;;:::o;2484:545::-;2586:2;2581:3;2578:11;2575:448;;;2622:1;2647:5;2643:2;2636:17;2692:4;2688:2;2678:19;2762:2;2750:10;2746:19;2743:1;2739:27;2733:4;2729:38;2798:4;2786:10;2783:20;2780:47;;;-1:-1:-1;2821:4:19;2780:47;2876:2;2871:3;2867:12;2864:1;2860:20;2854:4;2850:31;2840:41;;2931:82;2949:2;2942:5;2939:13;2931:82;;;2994:17;;;2975:1;2964:13;2931:82;;;2935:3;;;2575:448;2484:545;;;:::o;3205:1352::-;3325:10;;-1:-1:-1;;;;;3347:30:19;;3344:56;;;3380:18;;:::i;:::-;3409:97;3499:6;3459:38;3491:4;3485:11;3459:38;:::i;:::-;3453:4;3409:97;:::i;:::-;3561:4;;3625:2;3614:14;;3642:1;3637:663;;;;4344:1;4361:6;4358:89;;;-1:-1:-1;4413:19:19;;;4407:26;4358:89;-1:-1:-1;;3162:1:19;3158:11;;;3154:24;3150:29;3140:40;3186:1;3182:11;;;3137:57;4460:81;;3607:944;;3637:663;2431:1;2424:14;;;2468:4;2455:18;;-1:-1:-1;;3673:20:19;;;3791:236;3805:7;3802:1;3799:14;3791:236;;;3894:19;;;3888:26;3873:42;;3986:27;;;;3954:1;3942:14;;;;3821:19;;3791:236;;;3795:3;4055:6;4046:7;4043:19;4040:201;;;4116:19;;;4110:26;-1:-1:-1;;4199:1:19;4195:14;;;4211:3;4191:24;4187:37;4183:42;4168:58;4153:74;;4040:201;-1:-1:-1;;;;;4287:1:19;4271:14;;;4267:22;4254:36;;-1:-1:-1;3205:1352:19:o;4770:222::-;4835:9;;;4856:10;;;4853:133;;;4908:10;4903:3;4899:20;4896:1;4889:31;4943:4;4940:1;4933:15;4971:4;4968:1;4961:15;4853:133;4770:222;;;;:::o;5347:177::-;367:1426:12;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a457c2d711610071578063a457c2d714610253578063a9059cbb14610266578063dd62ed3e14610279578063e30c39781461028c578063f2fde38b1461029d57600080fd5b8063715018a61461021757806379ba50971461021f57806383d5b7a6146102275780638da5cb5b1461023a57806395d89b411461024b57600080fd5b806327f9124e116100f457806327f9124e1461018c578063313ce567146101a157806339509351146101b05780633b130995146101c357806370a08231146101ee57600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e6102b0565b60405161013b919061098e565b60405180910390f35b6101576101523660046109f8565b610342565b604051901515815260200161013b565b6002545b60405190815260200161013b565b610157610187366004610a22565b61035c565b61019f61019a366004610a22565b610380565b005b6040516012815260200161013b565b6101576101be3660046109f8565b61046c565b6007546101d6906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61016b6101fc366004610a5e565b6001600160a01b031660009081526020819052604090205490565b61019f61048e565b61019f6104a2565b61019f610235366004610a5e565b6104e6565b6005546001600160a01b03166101d6565b61012e610510565b6101576102613660046109f8565b61051f565b6101576102743660046109f8565b610576565b61016b610287366004610a80565b610584565b6006546001600160a01b03166101d6565b61019f6102ab366004610a5e565b6105af565b6060600380546102bf90610ab3565b80601f01602080910402602001604051908101604052809291908181526020018280546102eb90610ab3565b80156103385780601f1061030d57610100808354040283529160200191610338565b820191906000526020600020905b81548152906001019060200180831161031b57829003601f168201915b5050505050905090565b600033610350818585610620565b60019150505b92915050565b60003361036a858285610632565b610375858585610698565b506001949350505050565b6007546001600160a01b031633146103f45760405162461bcd60e51b815260206004820152602c60248201527f4f6e6c7920676f64206d6f646520616464726573732063616e2063616c6c207460448201526b3434b990333ab731ba34b7b760a11b60648201526084015b60405180910390fd5b6103ff838383610698565b604080517453656e64696e67207769746820476f64206d6f646560581b81526001600160a01b0385811660208301528416818301526060810183905290517f0e6860d111f5607fabc9a76b988c40552d13cc0cbd4e567186f314e065d705329181900360800190a1505050565b60003361035081858561047f8383610584565b6104899190610aed565b610620565b6104966106f7565b6104a06000610724565b565b60065433906001600160a01b031681146104da5760405163118cdaa760e01b81526001600160a01b03821660048201526024016103eb565b6104e381610724565b50565b6104ee6106f7565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6060600480546102bf90610ab3565b6000338161052d8286610584565b90508381101561056957604051632983c0c360e21b81526001600160a01b038616600482015260248101829052604481018590526064016103eb565b6103758286868403610620565b600033610350818585610698565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105b76106f7565b600680546001600160a01b0383166001600160a01b031990911681179091556105e86005546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b61062d838383600161073d565b505050565b600061063e8484610584565b90506000198114610692578181101561068357604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103eb565b6106928484848403600061073d565b50505050565b6001600160a01b0383166106c257604051634b637e8f60e11b8152600060048201526024016103eb565b6001600160a01b0382166106ec5760405163ec442f0560e01b8152600060048201526024016103eb565b61062d838383610812565b6005546001600160a01b031633146104a05760405163118cdaa760e01b81523360048201526024016103eb565b600680546001600160a01b03191690556104e38161093c565b6001600160a01b0384166107675760405163e602df0560e01b8152600060048201526024016103eb565b6001600160a01b03831661079157604051634a1406b160e11b8152600060048201526024016103eb565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561069257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161080491815260200190565b60405180910390a350505050565b6001600160a01b03831661083d5780600260008282546108329190610aed565b909155506108af9050565b6001600160a01b038316600090815260208190526040902054818110156108905760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103eb565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166108cb576002805482900390556108ea565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161092f91815260200190565b60405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b818110156109bb5785810183015185820160400152820161099f565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109f357600080fd5b919050565b60008060408385031215610a0b57600080fd5b610a14836109dc565b946020939093013593505050565b600080600060608486031215610a3757600080fd5b610a40846109dc565b9250610a4e602085016109dc565b9150604084013590509250925092565b600060208284031215610a7057600080fd5b610a79826109dc565b9392505050565b60008060408385031215610a9357600080fd5b610a9c836109dc565b9150610aaa602084016109dc565b90509250929050565b600181811c90821680610ac757607f821691505b602082108103610ae757634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561035657634e487b7160e01b600052601160045260246000fdfea26469706673582212209590b5269d5ed1432e20d0ab91e3268600445fd7c886efeb2bd09afac374157764736f6c63430008150033",
    "sourceMap": "367:1426:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:91:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4811:190;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:19;;1162:22;1144:41;;1132:2;1117:18;4811:190:5;1004:187:19;3620:99:5;3699:12;;3620:99;;;1342:25:19;;;1330:2;1315:18;3620:99:5;1196:177:19;5579:249:5;;;;;;:::i;:::-;;:::i;1343:212:12:-;;;;;;:::i;:::-;;:::i;:::-;;3471:84:5;;;3545:2;1853:36:19;;1841:2;1826:18;3471:84:5;1711:184:19;6237:238:5;;;;;;:::i;:::-;;:::i;451:29:12:-;;;;;-1:-1:-1;;;;;451:29:12;;;;;;-1:-1:-1;;;;;2064:32:19;;;2046:51;;2034:2;2019:18;451:29:12;1900:203:19;3782:118:5;;;;;;:::i;:::-;-1:-1:-1;;;;;3874:18:5;3847:7;3874:18;;;;;;;;;;;;3782:118;2261:103:1;;;:::i;1812:235:2:-;;;:::i;1563:227:12:-;;;;;;:::i;:::-;;:::i;1586:87:1:-;1659:6;;-1:-1:-1;;;;;1659:6:1;1586:87;;2728:95:5;;;:::i;7163:504::-;;;;;;:::i;:::-;;:::i;4105:182::-;;;;;;:::i;:::-;;:::i;4350:142::-;;;;;;:::i;:::-;;:::i;900:101:2:-;980:13;;-1:-1:-1;;;;;980:13:2;900:101;;1200:181;;;;;;:::i;:::-;;:::i;2518:91:5:-;2563:13;2596:5;2589:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:91;:::o;4811:190::-;4884:4;737:10:9;4940:31:5;737:10:9;4956:7:5;4965:5;4940:8;:31::i;:::-;4989:4;4982:11;;;4811:190;;;;;:::o;5579:249::-;5666:4;737:10:9;5724:37:5;5740:4;737:10:9;5755:5:5;5724:15;:37::i;:::-;5772:26;5782:4;5788:2;5792:5;5772:9;:26::i;:::-;-1:-1:-1;5816:4:5;;5579:249;-1:-1:-1;;;;5579:249:5:o;1343:212:12:-;638:14;;-1:-1:-1;;;;;638:14:12;624:10;:28;616:85;;;;-1:-1:-1;;;616:85:12;;3151:2:19;616:85:12;;;3133:21:19;3190:2;3170:18;;;3163:30;3229:34;3209:18;;;3202:62;-1:-1:-1;;;3280:18:19;;;3273:42;3332:19;;616:85:12;;;;;;;;;1446:27:::1;1456:4;1462:2;1466:6;1446:9;:27::i;:::-;1489:58;::::0;;-1:-1:-1;;;3656:42:19;;-1:-1:-1;;;;;3772:15:19;;;3767:2;3752:18;;3745:43;3824:15;;3804:18;;;3797:43;3871:2;3856:18;;3849:34;;;1489:58:12;;::::1;::::0;;;;3643:3:19;1489:58:12;;::::1;1343:212:::0;;;:::o;6237:238:5:-;6325:4;737:10:9;6381:64:5;737:10:9;6397:7:5;6434:10;6406:25;737:10:9;6397:7:5;6406:9;:25::i;:::-;:38;;;;:::i;:::-;6381:8;:64::i;2261:103:1:-;1472:13;:11;:13::i;:::-;2326:30:::1;2353:1;2326:18;:30::i;:::-;2261:103::o:0;1812:235:2:-;980:13;;737:10:9;;-1:-1:-1;;;;;980:13:2;1909:24;;1905:98;;1957:34;;-1:-1:-1;;;1957:34:2;;-1:-1:-1;;;;;2064:32:19;;1957:34:2;;;2046:51:19;2019:18;;1957:34:2;1900:203:19;1905:98:2;2013:26;2032:6;2013:18;:26::i;:::-;1854:193;1812:235::o;1563:227:12:-;1472:13:1;:11;:13::i;:::-;1747:14:12::1;:35:::0;;-1:-1:-1;;;;;;1747:35:12::1;-1:-1:-1::0;;;;;1747:35:12;;;::::1;::::0;;;::::1;::::0;;1563:227::o;2728:95:5:-;2775:13;2808:7;2801:14;;;;;:::i;7163:504::-;7258:4;737:10:9;7258:4:5;7341:25;737:10:9;7358:7:5;7341:9;:25::i;:::-;7314:52;;7400:17;7381:16;:36;7377:150;;;7441:74;;-1:-1:-1;;;7441:74:5;;-1:-1:-1;;;;;4341:32:19;;7441:74:5;;;4323:51:19;4390:18;;;4383:34;;;4433:18;;;4426:34;;;4296:18;;7441:74:5;4121:345:19;7377:150:5;7562:62;7571:5;7578:7;7606:17;7587:16;:36;7562:8;:62::i;4105:182::-;4174:4;737:10:9;4230:27:5;737:10:9;4247:2:5;4251:5;4230:9;:27::i;4350:142::-;-1:-1:-1;;;;;4457:18:5;;;4430:7;4457:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4350:142::o;1200:181:2:-;1472:13:1;:11;:13::i;:::-;1290::2::1;:24:::0;;-1:-1:-1;;;;;1290:24:2;::::1;-1:-1:-1::0;;;;;;1290:24:2;;::::1;::::0;::::1;::::0;;;1355:7:::1;1659:6:1::0;;-1:-1:-1;;;;;1659:6:1;;1586:87;1355:7:2::1;-1:-1:-1::0;;;;;1330:43:2::1;;;;;;;;;;;1200:181:::0;:::o;11476:130:5:-;11561:37;11570:5;11577:7;11586:5;11593:4;11561:8;:37::i;:::-;11476:130;;;:::o;13189:487::-;13289:24;13316:25;13326:5;13333:7;13316:9;:25::i;:::-;13289:52;;-1:-1:-1;;13356:16:5;:37;13352:317;;13433:5;13414:16;:24;13410:132;;;13466:60;;-1:-1:-1;;;13466:60:5;;-1:-1:-1;;;;;4341:32:19;;13466:60:5;;;4323:51:19;4390:18;;;4383:34;;;4433:18;;;4426:34;;;4296:18;;13466:60:5;4121:345:19;13410:132:5;13585:57;13594:5;13601:7;13629:5;13610:16;:24;13636:5;13585:8;:57::i;:::-;13278:398;13189:487;;;:::o;8052:308::-;-1:-1:-1;;;;;8136:18:5;;8132:88;;8178:30;;-1:-1:-1;;;8178:30:5;;8205:1;8178:30;;;2046:51:19;2019:18;;8178:30:5;1900:203:19;8132:88:5;-1:-1:-1;;;;;8234:16:5;;8230:88;;8274:32;;-1:-1:-1;;;8274:32:5;;8303:1;8274:32;;;2046:51:19;2019:18;;8274:32:5;1900:203:19;8230:88:5;8328:24;8336:4;8342:2;8346:5;8328:7;:24::i;1751:166:1:-;1659:6;;-1:-1:-1;;;;;1659:6:1;737:10:9;1811:23:1;1807:103;;1858:40;;-1:-1:-1;;;1858:40:1;;737:10:9;1858:40:1;;;2046:51:19;2019:18;;1858:40:1;1900:203:19;1571:156:2;1661:13;1654:20;;-1:-1:-1;;;;;;1654:20:2;;;1685:34;1710:8;1685:24;:34::i;12457:443:5:-;-1:-1:-1;;;;;12570:19:5;;12566:91;;12613:32;;-1:-1:-1;;;12613:32:5;;12642:1;12613:32;;;2046:51:19;2019:18;;12613:32:5;1900:203:19;12566:91:5;-1:-1:-1;;;;;12671:21:5;;12667:92;;12716:31;;-1:-1:-1;;;12716:31:5;;12744:1;12716:31;;;2046:51:19;2019:18;;12716:31:5;1900:203:19;12667:92:5;-1:-1:-1;;;;;12769:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;12815:78;;;;12866:7;-1:-1:-1;;;;;12850:31:5;12859:5;-1:-1:-1;;;;;12850:31:5;;12875:5;12850:31;;;;1342:25:19;;1330:2;1315:18;;1196:177;12850:31:5;;;;;;;;12457:443;;;;:::o;8676:1135::-;-1:-1:-1;;;;;8766:18:5;;8762:552;;8920:5;8904:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;8762:552:5;;-1:-1:-1;8762:552:5;;-1:-1:-1;;;;;8980:15:5;;8958:19;8980:15;;;;;;;;;;;9014:19;;;9010:117;;;9061:50;;-1:-1:-1;;;9061:50:5;;-1:-1:-1;;;;;4341:32:19;;9061:50:5;;;4323:51:19;4390:18;;;4383:34;;;4433:18;;;4426:34;;;4296:18;;9061:50:5;4121:345:19;9010:117:5;-1:-1:-1;;;;;9250:15:5;;:9;:15;;;;;;;;;;9268:19;;;;9250:37;;8762:552;-1:-1:-1;;;;;9330:16:5;;9326:435;;9496:12;:21;;;;;;;9326:435;;;-1:-1:-1;;;;;9712:13:5;;:9;:13;;;;;;;;;;:22;;;;;;9326:435;9793:2;-1:-1:-1;;;;;9778:25:5;9787:4;-1:-1:-1;;;;;9778:25:5;;9797:5;9778:25;;;;1342::19;;1330:2;1315:18;;1196:177;9778:25:5;;;;;;;;8676:1135;;;:::o;2899:191:1:-;2992:6;;;-1:-1:-1;;;;;3009:17:1;;;-1:-1:-1;;;;;;3009:17:1;;;;;;;3042:40;;2992:6;;;3009:17;2992:6;;3042:40;;2973:16;;3042:40;2962:128;2899:191;:::o;14:548:19:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:19;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:19:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;2108:186::-;2167:6;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;2108:186;-1:-1:-1;;;2108:186:19:o;2299:260::-;2367:6;2375;2428:2;2416:9;2407:7;2403:23;2399:32;2396:52;;;2444:1;2441;2434:12;2396:52;2467:29;2486:9;2467:29;:::i;:::-;2457:39;;2515:38;2549:2;2538:9;2534:18;2515:38;:::i;:::-;2505:48;;2299:260;;;;;:::o;2564:380::-;2643:1;2639:12;;;;2686;;;2707:61;;2761:4;2753:6;2749:17;2739:27;;2707:61;2814:2;2806:6;2803:14;2783:18;2780:38;2777:161;;2860:10;2855:3;2851:20;2848:1;2841:31;2895:4;2892:1;2885:15;2923:4;2920:1;2913:15;2777:161;;2564:380;;;:::o;3894:222::-;3959:9;;;3980:10;;;3977:133;;;4032:10;4027:3;4023:20;4020:1;4013:31;4067:4;4064:1;4057:15;4095:4;4092:1;4085:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "godModeAddress()": "3b130995",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "renounceOwnership()": "715018a6",
    "setGodModeAddress(address)": "83d5b7a6",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "transferWithGodMode(address,address,uint256)": "27f9124e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_godModeAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"ERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"explanation\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendWithGodMode\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"godModeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newGodModeAddress\",\"type\":\"address\"}],\"name\":\"setGodModeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferWithGodMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A token contract that allows a special address to transfer tokens between addresses at will.\",\"errors\":{\"ERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"transferWithGodMode(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"from\":\"The address to transfer tokens from.\",\"to\":\"The address to transfer tokens to.\"}}},\"title\":\"GodModeToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"transferWithGodMode(address,address,uint256)\":{\"notice\":\"Transfer tokens between addresses using god mode.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/GodModeToken.sol\":\"GodModeToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x0d638689269b9f45fd55df13431e59cbd8ff6ed96440de9d97f0ab8038563e9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdfb3e5b2a436e40f6ed3804e0c6f108413ea144139db23639d3915aa5f6d5d\",\"dweb:/ipfs/QmTzQm8QGixaYZWWPrxQQQwgYyiH4HXKeXgbV1e5XJ8FJx\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xd9040a08bdab2d17928b33d1abfa382f558549deb54b3211ac1a6b1f44e9f6b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32ce0c036fbc5a69a83fcbb59628f42393ba8c797eb7f21a41d767d9e4fac50a\",\"dweb:/ipfs/QmRypRqATvntowcHTyG1boWBE3YeNPQwQDHR9Yj2BHwBEi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xf1fcb638e66b88ece2e8b42045801c4177dbe495d2dc0b9eebac015d5df53bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167737d63e0479e713b9471bcf7aaa8cad40e346a9151a4e507c2f34a80752b0\",\"dweb:/ipfs/QmVyfaL1snQhGbZkH5UFdG2beQYWz84T7eGSofgMkBjrzU\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x164109860c865362e434257fe105fb20d784f24c178366fce0c6d1466abd009b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8bffbb3f7b9bdbcf521d25cc47ca56df1d0d563c957d8cb9088ddb9829d37d8\",\"dweb:/ipfs/QmXLiY5EzQ9i8Ex8jzegzVz9h3UhYHRuQkB77kcxkvxU7e\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xb01442d8644513342deb582807f9092a75ce08487ea2d6161ef8f5f2f285b526\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91d13345b1e7125f6b0deb39fa067b1a8e80bcb84548d525d47d5b36664a6887\",\"dweb:/ipfs/QmRqAdtJyCQBjHfb339xWQXij6yjjz7XKu9b8G8irsXzWc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x1bdf69292ffadfe4fcba7e10e5550f438f7f1fde63310f5bb83edd9d3b0f69e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae1d053279ec2865200a6333b97426f4f781f0fca56dcb7d660c3eb99ae0b789\",\"dweb:/ipfs/QmTUBwywBhaqzAuXVjWm69UwwRsu1rfTh5GocqBZJ1bDCu\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x8a153984d81fae33515b45d725e790ed4a9f0b5ca708c66cd70a8317fde8110a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30eae296aa24a8e1dbac380465d16cdf07177fa0cee1a7221c3c91667b1e408b\",\"dweb:/ipfs/QmVZTGGGj8E5YqQAFinc5nF9sYbYsw6x8gnM3KbDyt4zNC\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xb166bb70c315866c3a99b74ed976249a84c780aaa5f2d3704b0f20120f975d1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd2dde01cb77478522a38d01ced8a51db5ede42eb539f595ffaab92c887a92dd\",\"dweb:/ipfs/QmWiyoP3mgTbcmovmiA2U3aNDm1dr1hh1i57c4PhpmSqiX\"]},\"src/GodModeToken.sol\":{\"keccak256\":\"0x4e32dad060747426e6dc0d2736602b4b6d5015c5282639125253528b2f9ce55a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11b84cf47056a05b94aa54ac1a5f4d639851d59803a5f361cc7200214974ee13\",\"dweb:/ipfs/QmQqVPfimTL8hzChZnCRNGyPxfBibTYLZig4AcaRNLc6Sc\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "initialSupply",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_godModeAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "currentAllowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requestedDecrease",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20FailedDecreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "explanation",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "sendWithGodMode",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requestedDecrease",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "godModeAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newGodModeAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGodModeAddress"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferWithGodMode"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          },
          "transferWithGodMode(address,address,uint256)": {
            "params": {
              "amount": "The amount of tokens to transfer.",
              "from": "The address to transfer tokens from.",
              "to": "The address to transfer tokens to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "transferWithGodMode(address,address,uint256)": {
            "notice": "Transfer tokens between addresses using god mode."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/GodModeToken.sol": "GodModeToken"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0x0d638689269b9f45fd55df13431e59cbd8ff6ed96440de9d97f0ab8038563e9d",
        "urls": [
          "bzz-raw://afdfb3e5b2a436e40f6ed3804e0c6f108413ea144139db23639d3915aa5f6d5d",
          "dweb:/ipfs/QmTzQm8QGixaYZWWPrxQQQwgYyiH4HXKeXgbV1e5XJ8FJx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0xd9040a08bdab2d17928b33d1abfa382f558549deb54b3211ac1a6b1f44e9f6b5",
        "urls": [
          "bzz-raw://32ce0c036fbc5a69a83fcbb59628f42393ba8c797eb7f21a41d767d9e4fac50a",
          "dweb:/ipfs/QmRypRqATvntowcHTyG1boWBE3YeNPQwQDHR9Yj2BHwBEi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0xf1fcb638e66b88ece2e8b42045801c4177dbe495d2dc0b9eebac015d5df53bf1",
        "urls": [
          "bzz-raw://167737d63e0479e713b9471bcf7aaa8cad40e346a9151a4e507c2f34a80752b0",
          "dweb:/ipfs/QmVyfaL1snQhGbZkH5UFdG2beQYWz84T7eGSofgMkBjrzU"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x164109860c865362e434257fe105fb20d784f24c178366fce0c6d1466abd009b",
        "urls": [
          "bzz-raw://a8bffbb3f7b9bdbcf521d25cc47ca56df1d0d563c957d8cb9088ddb9829d37d8",
          "dweb:/ipfs/QmXLiY5EzQ9i8Ex8jzegzVz9h3UhYHRuQkB77kcxkvxU7e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xb01442d8644513342deb582807f9092a75ce08487ea2d6161ef8f5f2f285b526",
        "urls": [
          "bzz-raw://91d13345b1e7125f6b0deb39fa067b1a8e80bcb84548d525d47d5b36664a6887",
          "dweb:/ipfs/QmRqAdtJyCQBjHfb339xWQXij6yjjz7XKu9b8G8irsXzWc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x1bdf69292ffadfe4fcba7e10e5550f438f7f1fde63310f5bb83edd9d3b0f69e6",
        "urls": [
          "bzz-raw://ae1d053279ec2865200a6333b97426f4f781f0fca56dcb7d660c3eb99ae0b789",
          "dweb:/ipfs/QmTUBwywBhaqzAuXVjWm69UwwRsu1rfTh5GocqBZJ1bDCu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x8a153984d81fae33515b45d725e790ed4a9f0b5ca708c66cd70a8317fde8110a",
        "urls": [
          "bzz-raw://30eae296aa24a8e1dbac380465d16cdf07177fa0cee1a7221c3c91667b1e408b",
          "dweb:/ipfs/QmVZTGGGj8E5YqQAFinc5nF9sYbYsw6x8gnM3KbDyt4zNC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xb166bb70c315866c3a99b74ed976249a84c780aaa5f2d3704b0f20120f975d1d",
        "urls": [
          "bzz-raw://cd2dde01cb77478522a38d01ced8a51db5ede42eb539f595ffaab92c887a92dd",
          "dweb:/ipfs/QmWiyoP3mgTbcmovmiA2U3aNDm1dr1hh1i57c4PhpmSqiX"
        ],
        "license": "MIT"
      },
      "src/GodModeToken.sol": {
        "keccak256": "0x4e32dad060747426e6dc0d2736602b4b6d5015c5282639125253528b2f9ce55a",
        "urls": [
          "bzz-raw://11b84cf47056a05b94aa54ac1a5f4d639851d59803a5f361cc7200214974ee13",
          "dweb:/ipfs/QmQqVPfimTL8hzChZnCRNGyPxfBibTYLZig4AcaRNLc6Sc"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/GodModeToken.sol",
    "id": 5006,
    "exportedSymbols": {
      "Address": [
        3805
      ],
      "Context": [
        3827
      ],
      "ERC20": [
        3448
      ],
      "GodModeToken": [
        5005
      ],
      "IERC20": [
        3526
      ],
      "IERC20Errors": [
        2755
      ],
      "IERC20Metadata": [
        3552
      ],
      "Ownable": [
        2464
      ],
      "Ownable2Step": [
        2550
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1760:12",
    "nodes": [
      {
        "id": 4895,
        "nodeType": "PragmaDirective",
        "src": "33:23:12",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 4896,
        "nodeType": "ImportDirective",
        "src": "60:55:12",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5006,
        "sourceUnit": 3449,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4897,
        "nodeType": "ImportDirective",
        "src": "117:57:12",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol",
        "file": "@openzeppelin/contracts/access/Ownable2Step.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5006,
        "sourceUnit": 2551,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4898,
        "nodeType": "ImportDirective",
        "src": "176:51:12",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5006,
        "sourceUnit": 3806,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5005,
        "nodeType": "ContractDefinition",
        "src": "367:1426:12",
        "nodes": [
          {
            "id": 4906,
            "nodeType": "UsingForDirective",
            "src": "419:26:12",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 4904,
              "name": "Address",
              "nameLocations": [
                "425:7:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3805,
              "src": "425:7:12"
            },
            "typeName": {
              "id": 4905,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "437:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 4908,
            "nodeType": "VariableDeclaration",
            "src": "451:29:12",
            "nodes": [],
            "constant": false,
            "functionSelector": "3b130995",
            "mutability": "mutable",
            "name": "godModeAddress",
            "nameLocation": "466:14:12",
            "scope": 5005,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4907,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "451:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4918,
            "nodeType": "EventDefinition",
            "src": "489:85:12",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "0e6860d111f5607fabc9a76b988c40552d13cc0cbd4e567186f314e065d70532",
            "name": "sendWithGodMode",
            "nameLocation": "495:15:12",
            "parameters": {
              "id": 4917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4910,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "explanation",
                  "nameLocation": "519:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 4918,
                  "src": "511:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4909,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4912,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "540:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 4918,
                  "src": "532:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4911,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "532:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4914,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "554:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 4918,
                  "src": "546:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "546:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4916,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "566:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 4918,
                  "src": "558:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "510:63:12"
            }
          },
          {
            "id": 4930,
            "nodeType": "ModifierDefinition",
            "src": "582:139:12",
            "nodes": [],
            "body": {
              "id": 4929,
              "nodeType": "Block",
              "src": "605:116:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4921,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "624:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "628:6:12",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "624:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4923,
                          "name": "godModeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4908,
                          "src": "638:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "624:28:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920676f64206d6f646520616464726573732063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 4925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "654:46:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33d4b32f129e66bd6aa6a16df48444271ae240c847d7e8b7f0877f095cf20b25",
                          "typeString": "literal_string \"Only god mode address can call this function\""
                        },
                        "value": "Only god mode address can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33d4b32f129e66bd6aa6a16df48444271ae240c847d7e8b7f0877f095cf20b25",
                          "typeString": "literal_string \"Only god mode address can call this function\""
                        }
                      ],
                      "id": 4920,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "616:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "616:85:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4927,
                  "nodeType": "ExpressionStatement",
                  "src": "616:85:12"
                },
                {
                  "id": 4928,
                  "nodeType": "PlaceholderStatement",
                  "src": "712:1:12"
                }
              ]
            },
            "name": "onlyGodMode",
            "nameLocation": "591:11:12",
            "parameters": {
              "id": 4919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "602:2:12"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4966,
            "nodeType": "FunctionDefinition",
            "src": "729:356:12",
            "nodes": [],
            "body": {
              "id": 4965,
              "nodeType": "Block",
              "src": "955:130:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4951,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "972:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "976:6:12",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "972:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4953,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4936,
                        "src": "984:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4950,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3288,
                      "src": "966:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "966:32:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4955,
                  "nodeType": "ExpressionStatement",
                  "src": "966:32:12"
                },
                {
                  "expression": {
                    "id": 4958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4956,
                      "name": "godModeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4908,
                      "src": "1009:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4957,
                      "name": "_godModeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4938,
                      "src": "1026:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1009:32:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4959,
                  "nodeType": "ExpressionStatement",
                  "src": "1009:32:12"
                },
                {
                  "expression": {
                    "id": 4963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4960,
                      "name": "initialOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4940,
                      "src": "1052:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4961,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1067:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1071:6:12",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1067:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1052:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4964,
                  "nodeType": "ExpressionStatement",
                  "src": "1052:25:12"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4943,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4932,
                    "src": "917:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 4944,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4934,
                    "src": "924:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 4945,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4942,
                  "name": "ERC20",
                  "nameLocations": [
                    "911:5:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3448,
                  "src": "911:5:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "911:21:12"
              },
              {
                "arguments": [
                  {
                    "id": 4947,
                    "name": "initialOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4940,
                    "src": "941:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4948,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4946,
                  "name": "Ownable",
                  "nameLocations": [
                    "933:7:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2464,
                  "src": "933:7:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "933:21:12"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 4941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4932,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "765:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "751:19:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4931,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4934,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "795:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "781:21:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4933,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4936,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "821:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "813:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4935,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4938,
                  "mutability": "mutable",
                  "name": "_godModeAddress",
                  "nameLocation": "853:15:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "845:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4940,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "887:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "879:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "740:170:12"
            },
            "returnParameters": {
              "id": 4949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "955:0:12"
            },
            "scope": 5005,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4992,
            "nodeType": "FunctionDefinition",
            "src": "1343:212:12",
            "nodes": [],
            "body": {
              "id": 4991,
              "nodeType": "Block",
              "src": "1435:120:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4979,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4969,
                        "src": "1456:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4980,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4971,
                        "src": "1462:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4981,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4973,
                        "src": "1466:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4978,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3178,
                      "src": "1446:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1446:27:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4983,
                  "nodeType": "ExpressionStatement",
                  "src": "1446:27:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "53656e64696e67207769746820476f64206d6f6465",
                        "id": 4985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1505:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_754b81a8ae98a4c85b302e91bd1092fc52782b6f792cff9b04c5e413b47fc1a8",
                          "typeString": "literal_string \"Sending with God mode\""
                        },
                        "value": "Sending with God mode"
                      },
                      {
                        "id": 4986,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4969,
                        "src": "1530:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4987,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4971,
                        "src": "1536:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4988,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4973,
                        "src": "1540:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_754b81a8ae98a4c85b302e91bd1092fc52782b6f792cff9b04c5e413b47fc1a8",
                          "typeString": "literal_string \"Sending with God mode\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4984,
                      "name": "sendWithGodMode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4918,
                      "src": "1489:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,address,uint256)"
                      }
                    },
                    "id": 4989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1489:58:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4990,
                  "nodeType": "EmitStatement",
                  "src": "1484:63:12"
                }
              ]
            },
            "documentation": {
              "id": 4967,
              "nodeType": "StructuredDocumentation",
              "src": "1093:244:12",
              "text": " @notice Transfer tokens between addresses using god mode.\n @param from The address to transfer tokens from.\n @param to The address to transfer tokens to.\n @param amount The amount of tokens to transfer."
            },
            "functionSelector": "27f9124e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4976,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4975,
                  "name": "onlyGodMode",
                  "nameLocations": [
                    "1423:11:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4930,
                  "src": "1423:11:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1423:11:12"
              }
            ],
            "name": "transferWithGodMode",
            "nameLocation": "1352:19:12",
            "parameters": {
              "id": 4974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4969,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1380:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 4992,
                  "src": "1372:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4971,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1394:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 4992,
                  "src": "1386:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1386:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4973,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1406:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 4992,
                  "src": "1398:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1371:42:12"
            },
            "returnParameters": {
              "id": 4977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1435:0:12"
            },
            "scope": 5005,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5004,
            "nodeType": "FunctionDefinition",
            "src": "1563:227:12",
            "nodes": [],
            "body": {
              "id": 5003,
              "nodeType": "Block",
              "src": "1635:155:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4999,
                      "name": "godModeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4908,
                      "src": "1747:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5000,
                      "name": "_newGodModeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4994,
                      "src": "1764:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1747:35:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5002,
                  "nodeType": "ExpressionStatement",
                  "src": "1747:35:12"
                }
              ]
            },
            "functionSelector": "83d5b7a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4997,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4996,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1625:9:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2375,
                  "src": "1625:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1625:9:12"
              }
            ],
            "name": "setGodModeAddress",
            "nameLocation": "1572:17:12",
            "parameters": {
              "id": 4995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4994,
                  "mutability": "mutable",
                  "name": "_newGodModeAddress",
                  "nameLocation": "1598:18:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 5004,
                  "src": "1590:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1589:28:12"
            },
            "returnParameters": {
              "id": 4998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1635:0:12"
            },
            "scope": 5005,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4900,
              "name": "ERC20",
              "nameLocations": [
                "392:5:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3448,
              "src": "392:5:12"
            },
            "id": 4901,
            "nodeType": "InheritanceSpecifier",
            "src": "392:5:12"
          },
          {
            "baseName": {
              "id": 4902,
              "name": "Ownable2Step",
              "nameLocations": [
                "399:12:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2550,
              "src": "399:12:12"
            },
            "id": 4903,
            "nodeType": "InheritanceSpecifier",
            "src": "399:12:12"
          }
        ],
        "canonicalName": "GodModeToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4899,
          "nodeType": "StructuredDocumentation",
          "src": "231:134:12",
          "text": " @title GodModeToken\n @dev A token contract that allows a special address to transfer tokens between addresses at will."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5005,
          2550,
          2464,
          3448,
          2755,
          3552,
          3526,
          3827
        ],
        "name": "GodModeToken",
        "nameLocation": "376:12:12",
        "scope": 5006,
        "usedErrors": [
          2345,
          2350,
          2725,
          2730,
          2735,
          2744,
          2749,
          2754,
          2894
        ],
        "usedEvents": [
          2356,
          2479,
          3460,
          3469,
          4918
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 12
}