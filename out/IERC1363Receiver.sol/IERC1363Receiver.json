{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onTransferReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "onTransferReceived(address,address,uint256,bytes)": "88a7ca5c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTransferReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support {IERC1363-transferAndCall} or {IERC1363-transferFromAndCall} from {ERC1363} token contracts.\",\"kind\":\"dev\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"details\":\"Any ERC1363 smart contract calls this function on the recipient after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.\",\"params\":{\"amount\":\"uint256 The amount of tokens transferred\",\"data\":\"bytes Additional data with no specified format\",\"from\":\"address The address which are token transferred from\",\"operator\":\"address The address which called `transferAndCall` or `transferFromAndCall` function\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))` unless throwing\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of ERC1363 tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/OZ/IERC1363Receiver.sol\":\"IERC1363Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/OZ/IERC1363Receiver.sol\":{\"keccak256\":\"0x6586e5ed3b1ee3957fb4c1041d1b004927e15764fd89940fba6acb2ef7362c0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e10e0dafa3aa8583fc479dbb281b6ef27e6ead2d8b2c3d3eaf3b2686736e44f\",\"dweb:/ipfs/QmaH2jDTvZvXh9Ru6L1Ta5ZSpgujK19DY9zgDZBJgsfrya\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onTransferReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "onTransferReceived(address,address,uint256,bytes)": {
            "details": "Any ERC1363 smart contract calls this function on the recipient after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.",
            "params": {
              "amount": "uint256 The amount of tokens transferred",
              "data": "bytes Additional data with no specified format",
              "from": "address The address which are token transferred from",
              "operator": "address The address which called `transferAndCall` or `transferFromAndCall` function"
            },
            "returns": {
              "_0": "`bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` unless throwing"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "onTransferReceived(address,address,uint256,bytes)": {
            "notice": "Handle the receipt of ERC1363 tokens"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/OZ/IERC1363Receiver.sol": "IERC1363Receiver"
      },
      "libraries": {}
    },
    "sources": {
      "src/OZ/IERC1363Receiver.sol": {
        "keccak256": "0x6586e5ed3b1ee3957fb4c1041d1b004927e15764fd89940fba6acb2ef7362c0d",
        "urls": [
          "bzz-raw://3e10e0dafa3aa8583fc479dbb281b6ef27e6ead2d8b2c3d3eaf3b2686736e44f",
          "dweb:/ipfs/QmaH2jDTvZvXh9Ru6L1Ta5ZSpgujK19DY9zgDZBJgsfrya"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/OZ/IERC1363Receiver.sol",
    "id": 5106,
    "exportedSymbols": {
      "IERC1363Receiver": [
        5105
      ]
    },
    "nodeType": "SourceUnit",
    "src": "115:1391:14",
    "nodes": [
      {
        "id": 5089,
        "nodeType": "PragmaDirective",
        "src": "115:24:14",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 5105,
        "nodeType": "ContractDefinition",
        "src": "302:1203:14",
        "nodes": [
          {
            "id": 5104,
            "nodeType": "FunctionDefinition",
            "src": "1344:159:14",
            "nodes": [],
            "documentation": {
              "id": 5091,
              "nodeType": "StructuredDocumentation",
              "src": "514:825:14",
              "text": " @notice Handle the receipt of ERC1363 tokens\n @dev Any ERC1363 smart contract calls this function on the recipient\n after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the\n transfer. Return of other than the magic value MUST result in the\n transaction being reverted.\n Note: the token contract address is always the message sender.\n @param operator address The address which called `transferAndCall` or `transferFromAndCall` function\n @param from address The address which are token transferred from\n @param amount uint256 The amount of tokens transferred\n @param data bytes Additional data with no specified format\n @return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` unless throwing"
            },
            "functionSelector": "88a7ca5c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onTransferReceived",
            "nameLocation": "1353:18:14",
            "parameters": {
              "id": 5100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5093,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1389:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5104,
                  "src": "1381:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5092,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1381:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5095,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1415:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5104,
                  "src": "1407:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5097,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1437:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5104,
                  "src": "1429:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5096,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1429:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5099,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1466:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5104,
                  "src": "1453:17:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5098,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1453:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1371:105:14"
            },
            "returnParameters": {
              "id": 5103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5102,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5104,
                  "src": "1495:6:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5101,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1495:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1494:8:14"
            },
            "scope": 5105,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC1363Receiver",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 5090,
          "nodeType": "StructuredDocumentation",
          "src": "141:160:14",
          "text": " @dev Interface for any contract that wants to support {IERC1363-transferAndCall}\n or {IERC1363-transferFromAndCall} from {ERC1363} token contracts."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          5105
        ],
        "name": "IERC1363Receiver",
        "nameLocation": "312:16:14",
        "scope": 5106,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 14
}